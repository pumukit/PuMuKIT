{% extends '@PumukitNewAdmin/layout.html.twig' %}

{% block body %}
    <h3 class="cab_body_div">
        <a title="{% trans %}Back to series list{% endtrans %}" href="{{ path('pumukitnewadmin_series_index') }}" class="btn btn-pumukit btn-raised pull-right" style="margin:0px">
            Â« {% trans %}Back to series list{% endtrans %}
        </a>
        <ul class="breadcrumb" style="margin-bottom: 5px;">
            <li><a href="{{ path('pumukitnewadmin_series_index') }}">{% trans %}Series{% endtrans %}</a></li>
            <li class="active">{% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::ACCESS_MULTIMEDIA_SERIES')) %} {{ series.getTitle() }}{% endif %}</li>
        </ul>
        {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::ACCESS_MULTIMEDIA_SERIES')) %}
            <input type="hidden" name="series_id" id="mms_series_id" value="{{ series.id }}"/>
        {% endif %}
    </h3>

    <div class="row">
        {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::ACCESS_MULTIMEDIA_SERIES')) %}
            <div id="tv_admin_content" class="col-md-10">
                <div class="well">
                    <div id="list_mms">
                        {% include '@PumukitNewAdmin/MultimediaObject/list.html.twig' %}
                    </div>
                    <div class="row">
                        <div class="col-xs-4">
                            <select id="options_mms" class="form-control" title="{% trans %}Actions on selected items{% endtrans %}" onchange="window.change_select('mm', $(this), 'mms', '{{ series.id }}');">
                                <option value="default" selected="selected">{% trans %}Select an action{% endtrans %}...</option>
                                <option disabled="">---</option>
                                <option value="delete_selected">{% trans %}Delete selected{% endtrans %}</option>

                                {% if not is_naked() %}
                                    <option {% if disable_pudenew %}disabled=""{% endif %} value="invert_announce_selected">{% trans %}Announce/Not announce selected{% endtrans %}</option>
                                {% endif %}

                                <option disabled="">---</option>
                                <option value="order_manual" data-type="sort" {% if series.sorting == constant('SORT_MANUAL', series) %}data-active="1"{% endif %}>
                                    {% trans %}List multimedia objects in a manual order{% endtrans %}
                                    {% if series.sorting == constant('SORT_MANUAL', series) %}{% trans %}(active){% endtrans %}{% endif %}
                                </option>
                                <option value="order_pub_date_desc" data-type="sort" {% if series.sorting == constant('SORT_PUB_DES', series) %}data-active="1"{% endif %}>
                                    {% trans %}List multimedia objects in descending order of publication date{% endtrans %}
                                    {% if series.sorting == constant('SORT_PUB_DES', series) %}{% trans %}(active){% endtrans %}{% endif %}
                                </option>
                                <option value="order_pub_date_asc" data-type="sort" {% if series.sorting == constant('SORT_PUB_ASC', series) %}data-active="1"{% endif %}>
                                    {% trans %}List multimedia objects in ascending order of publication date{% endtrans %}
                                    {% if series.sorting == constant('SORT_PUB_ASC', series) %}{% trans %}(active){% endtrans %}{% endif %}
                                </option>
                                <option value="order_rec_date_desc" data-type="sort" {% if series.sorting == constant('SORT_REC_DES', series) %}data-active="1"{% endif %}>
                                    {% trans %}List multimedia objects in descending order of recording date{% endtrans %}
                                    {% if series.sorting == constant('SORT_REC_DES', series) %}{% trans %}(active){% endtrans %}{% endif %}
                                </option>
                                <option value="order_rec_date_asc" data-type="sort" {% if series.sorting == constant('SORT_REC_ASC', series) %}data-active="1"{% endif %}>
                                    {% trans %}List multimedia objects in ascending order of recording date{% endtrans %}
                                    {% if series.sorting == constant('SORT_REC_ASC', series) %}{% trans %}(active){% endtrans %}{% endif %}
                                </option>
                                <option value="order_abc" data-type="sort" {% if series.sorting == constant('SORT_ALPHAB', series) %}data-active="1"{% endif %}>
                                    {% trans %}List multimedia objects in ascending order of title{% endtrans %}
                                    {% if series.sorting == constant('SORT_ALPHAB', series) %}{% trans %}(active){% endtrans %}{% endif %}
                                </option>
                                <option disabled="">---</option>
                                <option value="cut_mm">{% trans %}Cut multimedia objects{% endtrans %}</option>
                                {% if app.session.has('admin/mms/cut') and app.session.get('admin/mms/cut') %}
                                    <option value="paste_mm" id="paste_mm">
                                        {% trans %}Paste multimedia objects{% endtrans %} ({% for id in app.session.get('admin/mms/cut') %}{{ id }}{% if not loop.last %},&nbsp;{% endif %}{% endfor %})
                                    </option>
                                {% else %}
                                    <option value="paste_mm" id="paste_mm" style="display:none"></option>
                                {% endif %}
                                {% if app.user and is_granted('ROLE_ACCESS_EDIT_PLAYLIST') %}
                                    <option value="add_playlist">{% trans %}Add to playlist{% endtrans %}</option>
                                {% endif %}
                            </select>
                        </div>
                        <div class="col-xs-8 text-right">
                            {# RENDERS ANY BUTTONS DEFINED IN AN EXTRA PLUGIN #}
                            {% for item in get_extra_buttons() %}
                                {% if app.user and is_granted(item.accessRole) %}
                                    <a title="{{ item.name | trans }}" class="btn btn-pumukit btn-raised qa_series_button_{{ item.name }} extra_button" href="{{ path(item.uri, {'series': series.id }) }}">
                                        <i class="{{ item.iconClass | default('fas fa-plus') }}"></i>
                                        {{ item.name | trans }}
                                    </a>
                                {% endif %}
                            {% endfor %}
                            {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::ACCESS_WIZARD_UPLOAD')) %}
                                <a class="extra_button btn btn-primary btn-raised wizard_button" href="{{ url(is_naked() ? 'pumukitwizard_simple_index' : 'pumukitwizard_default_type', {'id': series.id, 'from':'mms', 'same_series': true}) }}">
                                    <i class="fas fa-rocket"></i>
                                    {% trans %}Wizard{% endtrans %}
                                </a>
                            {% endif %}
                            {# TODO Path create with page number #}
                            {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::ACCESS_ADVANCED_UPLOAD')) %}
                                <a title="{% trans %}Create new multimedia object{% endtrans %}" id="pumukitnewadmin_mms_new_button" class="extra_button btn btn-pumukit btn-raised" href="#">
                                    <i class="fas fa-plus"></i>
                                    {% trans %}New{% endtrans %}
                                </a>
                            {% endif %}
                        </div>
                    </div>
                </div>
                <div id="edit_mm">
                    {% if(app.session.has('admin/series/id') and app.session.has('admin/mms/id')) %}
                        {{ render(url('pumukitnewadmin_mms_edit', {'id': app.session.get('admin/mms/id'), 'seriesId': app.session.get('admin/series/id')})) }}
                    {% endif %}
                </div>
            </div>

            <div id="tv_admin_bar" class="col-md-2 hidden-xs hidden-sm">
                <div id="preview_mm" class="well">
                    {% if(app.session.has('admin/mms/id')) %}
                        {{ render_hinclude(url('pumukitnewadmin_mms_show', {'id': app.session.get('admin/mms/id')})) }}
                    {% else %}
                        {% trans %}Select any multimedia object.{% endtrans %}
                    {% endif %}
                </div>
            </div>
        {% else %}
            <div class="col-md-12">
                <div class="well">
                    {% trans %}You don't have enough permissions to access this content.{% endtrans %}
                </div>
            </div>
        {% endif %}
    </div>

    <div class="pmk-modal modal fade" id="myAuxModal" tabindex="-1" role="dialog" aria-labelledby="myAuxModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
            </div>
        </div>
    </div>

    {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::ACCESS_MULTIMEDIA_SERIES')) %}
        <script type="text/javascript">
            /* TODO
            var update_file;
            window.onload = function(){
              Shadowbox.init({
                skipSetup:  true,
                onOpen:     function(element) {
                              if (typeof update_file == 'object') update_file.stop();
                            },
                onClose:    function(element) {
                              if (typeof update_file == 'object') update_file.start();
                            }
              });
            };
            */

            window.setInterval(window.update_mms_status_wrapper, 15000);

            window.update_preview_mms = function (id) {
                var route = "{{ path('pumukitnewadmin_mms_show', {id: '__id__'}) }}";
                $.ajax({
                    url: route.replace('__id__', id),
                    type: 'POST',
                    success: function (response) {
                        $('#preview').html(response);
                    }
                });
            }

            var url = "{{ path('pumukit_schema_apikeywords_mmobj', {'_format':'json'})|raw }}";
            window.mmobjkeywords = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('_id'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: {
                    url: url,
                    ttl: 1800000
                }
            });

            window.mmobjkeywords.initialize();

        </script>
    {% endif %}
{% endblock %}
