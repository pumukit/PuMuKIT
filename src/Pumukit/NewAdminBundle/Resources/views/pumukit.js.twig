//Creates a new "containsNC" function to use in jQuery being case insensitive
$.extend($.expr[":"], {
    "containsNC": function(elem, i, match, array) {
        return (elem.textContent || elem.innerText || "").toLowerCase().indexOf((match[3] || "").toLowerCase()) >= 0;
    }
});

window.submit_delete_role = function(id, countMm)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete this role?{% endtrans %}")){
            var url = "{{ path('pumukitnewadmin_role_delete', {'id': '__id__'})|raw }}";
            var message = "{% trans %}Role successfully deleted.{% endtrans %}";
            $('#list_roles').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(){success(message)});
        }
    }else{
        window.alert("{% trans %}Impossible to delete, role with{% endtrans %} "+countMm+" {% trans %}people{% endtrans %}");
    }
}

window.submit_delete_user = function(id, userFullname)
{
    if (window.confirm("{% trans %}Are you sure you want to delete the user{% endtrans %} "+userFullname+"?")) {
        var url = "{{ path('pumukitnewadmin_user_delete', {'id': '__id__'})|raw }}";
        $('#list_users').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(responseText, textStatus, XMLHttpRequest){
          if(XMLHttpRequest.status >= 400){
            no_success('{% trans %}Error deleting user{% endtrans %}: ' + responseText);
          }else{
            success('{% trans %}User{% endtrans %} "'+userFullname+'" {% trans %}successfully deleted.{% endtrans %}');
          }
        });
    }
}

window.submit_delete_live = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this live channel?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_live_delete', {'id': '__id__'})|raw }}";

        $.ajax({
            url: url.replace('__id__', id),
            method: 'DELETE',
            success: function (response) {
                if(-1 !== response.indexOf('error')) {
                    var message = '{% trans %}Delete error. Live channel channel is associated to live event.{% endtrans %}';
                    no_success(message);
                } else {
                    var message = '{% trans %}Live channel successfully deleted.{% endtrans %}';
                    success(message);
                    $('#list_lives').load("{{ path('pumukitnewadmin_live_list') }}");
                }
            },
            error: function() {
                var message = '{% trans %}Delete error. Live channel channel is associated to live event.{% endtrans %}';
                no_success(message);
            }
        });

        return false;
    }
}


window.submit_delete_seriestype = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this series type?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_seriestype_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Series type successfully deleted.{% endtrans %}';
        $('#list_seriestypes').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(){success(message)});
    }
}



window.submit_delete_event = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this live event?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_event_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Live event successfully deleted.{% endtrans %}';
        $('#list_events').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(){success(message)});
    }
}


window.sync_tags_mms = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to sync this tags? The tags in other objects from this series will be lost.{% endtrans %}")){
      var route = "{{ path('pumukitnewadmin_mms_sync_tags', {'id': '__id__'})|raw }}";
      route = route.replace('__id__', id);
      $.ajax(route, {
        type: 'POST',
        success: function(response, textStatus, jqXHR){
          window.location.reload();
        }
      });
    }
}


window.submit_delete_mms = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this multimedia object?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_mms_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Multimedia Object successfully deleted.{% endtrans %}';
        var sessionId = $($('tr.success').find('input.mm_checkbox')[0]).attr('id');
        $('#list_mms').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(responseText, textStatus, XMLHttpRequest){
            if (textStatus !== "error") {
                if (id === sessionId) {
                    $('#preview_mm').html('{% trans %}Select any multimedia object.{% endtrans %}');
                    $('#edit_mm').html('');
                }
                success(message)
            } else if (XMLHttpRequest.status == 404) {
                window.location.href = "{{ path('pumukitnewadmin_series_index')|raw }}";
            } else {
                no_success(XMLHttpRequest['statusText'] + ': ' + responseText);
            }
        });
    }
}

window.submit_generate_magic_mms = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to regenerate the magic url for this multimedia object?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_mms_generate_magic_url', {'id': '__id__'})|raw }}";
        var magicUrl =    "{{ url('pumukit_webtv_multimediaobject_magicindex', {secret: '__secret__'})|raw }}";
        var message = '{% trans %}Magic Url successfully generated.{% endtrans %}';
        $('#inputROMagicUrl').load(url.replace('__id__', id), {'_method': 'POST'}, function(responseText, textStatus, XMLHttpRequest){
            if (textStatus !== "error") {
                success(message);
                magicUrl = magicUrl.replace('__secret__', responseText)
                $('#inputROMagicUrl').val(magicUrl);
                $('#alinkROMagicUrl').attr("href",magicUrl);
            } else {
                no_success(XMLHttpRequest['statusText'] + ': ' + responseText);
            }
        });
    }
}

window.submit_generate_magic_series = function(id, seriesTitle)
{
    if (window.confirm("{% trans %}Are you sure you want to regenerate the magic url for the Series: "+seriesTitle+"?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_series_generate_magic_url', {'id': '__id__'})|raw }}";
        var magicUrl = "{{url('pumukit_webtv_series_magicindex', {secret: '__secret__'})}}"
        var message = '{% trans %}Magic Url successfully generated.{% endtrans %}';
        $('#inputROMagicUrl').load(url.replace('__id__', id), {'_method': 'POST'}, function(responseText, textStatus, XMLHttpRequest){
            if (textStatus !== "error") {
                success(message);
                magicUrl = magicUrl.replace('__secret__', responseText)
                $('#inputROMagicUrl').val(magicUrl);
                $('#alinkROMagicUrl').attr("href",magicUrl);
            } else {
                no_success(XMLHttpRequest['statusText'] + ': ' + responseText);
            }
        });
    }
}

window.submit_clone_mms = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to clone this multimedia object?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_mms_clone', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Multimedia Object successfully cloned.{% endtrans %}';
        $('#list_mms').load(url.replace('__id__', id), {'_method': 'POST'}, function(){
            success(message)
        });
    }
}

window.submit_clone_series = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to clone this series?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_series_clone', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Series successfully cloned.{% endtrans %}';
        $('#list_series').load(url.replace('__id__', id), {'_method': 'POST'}, function(){
            success(message);
        });
    }
}

window.submit_delete_series = function(id, seriesTitle, countMm)
{
    var url = "{{ path('pumukitnewadmin_series_delete', {'id': '__id__'})|raw }}";
    if (window.confirm('{% trans %}Are you sure you want to delete the series{% endtrans %} "'+seriesTitle+'"? {% trans %}This series has{% endtrans %} '+countMm+' {% trans %}multimedia object(s){% endtrans %}.')){
        var message = '{% trans %}Series{% endtrans %} "'+seriesTitle+'" {% trans %}successfully deleted{% endtrans %}.';
        var sessionId = $($('tr.success').find('input.series_checkbox')[0]).attr('id');
        $('#list_series').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(responseText, textStatus, XMLHttpRequest){
            if (textStatus !== "error") {
                if (id === sessionId) {
                    $('#preview_series').html('{% trans %}Select any series.{% endtrans %}');
                    $('#edit_series').html('');
                }
                success(message);
            } else {
                no_success(XMLHttpRequest['statusText'] + ': ' + responseText);
            }
        });
    }
}

window.submit_delete_playlist = function(id, playlistTitle, countMm)
{
    var url = "{{ path('pumukitnewadmin_playlist_delete', {'id': '__id__'})|raw }}";
    if (window.confirm('{% trans %}Are you sure you want to delete the playlist{% endtrans %} "'+playlistTitle+'"? {% trans %}This playlist has{% endtrans %} '+countMm+' {% trans %}multimedia object(s){% endtrans %}.')){
        var message = '{% trans %}Playlist{% endtrans %} "'+playlistTitle+'" {% trans %}successfully deleted{% endtrans %}.';
        var sessionId = $($('tr.success').find('input.playlist_checkbox')[0]).attr('id');
        $('#list_playlists').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(responseText, textStatus, XMLHttpRequest){
            if (textStatus !== "error") {
                if (id === sessionId) {
                    $('#preview_playlist').html('{% trans %}Select any playlist.{% endtrans %}');
                    $('#edit_playlist').html('');
                }
                success(message);
            } else {
                no_success(XMLHttpRequest['statusText'] + ': ' + responseText);
            }
        });
    }
}

window.submit_delete_permissionprofile = function(id, permissionProfileName)
{
    if (window.confirm('{% trans %}Are you sure you want to delete the Permission Profile{% endtrans %} "'+permissionProfileName+'"?.')){
        var url = "{{ path('pumukitnewadmin_permissionprofile_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Permission Profile{% endtrans %} "'+permissionProfileName+'" {% trans %}successfully deleted{% endtrans %}.';
        $('#list_permissionprofiles').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(responseText, textStatus, XMLHttpRequest){
            $('[data-toggle="tooltip"]').tooltip();
            if (textStatus !== "error") {
                success(message);
            } else {
                no_success(XMLHttpRequest['statusText'] + ': ' + responseText);
            }
        });
    }
}

success = function(message){
    $("#div_messages_span_info").attr("data-content", message);
    $("#div_messages_span_info").snackbar("show");
}

no_success = function(message){
    $("#div_messages_span_error").attr("data-content", message);
    $("#div_messages_span_error").snackbar("show");
}

window.update_preview = function(id) {
  var route = '{{ path('pumukitnewadmin_series_show', {'id': 'PLACEHOLDER'})|raw }}';
  route.replace('PLACEHOLDER', id);
  $('#preview_series').load(route, {method:'POST'});
}

window.update_mms_status_wrapper = function() {
   var url = "{{ path('pumukitnewadmin_mms_status', {'id': '__id__'})|raw }}";
   $('.pmk-job-animate')
      .map(function(i, e) {return e.parentElement.dataset.id; })
      .each(function(i, id){$('#table_mms_status_wrapper_' + id).load(url.replace('__id__', id));})
}

window.delete_eventpic = function(eventId) {
    if (window.confirm('{% trans %}Are you sure you want to delete this thumbnail?{% endtrans %}')) {
        var url = '{{ path('pumukitnewadmin_eventpic_delete', {'id': '___id___'})|raw }}';
        $('#list_events').load(url.replace('___id___', eventId), {'_method': 'DELETE'}, function(){
            var show_url = "{{ path('pumukitnewadmin_event_show', {'id': '___id___'})|raw }}";
            $('#preview_event').load(show_url.replace('___id___', eventId));
            success('{% trans %}Thumbnail removed.{% endtrans %}');
        });
    }
}

window.delete_seriespic = function(id, seriesId) {
    if (window.confirm('{% trans %}Are you sure you want to delete this thumbnail?{% endtrans %}')) {
        var url = '{{ path('pumukitnewadmin_seriespic_delete', {'id': '___id___'})|raw }}';
        $('#edit_series').load(url.replace('___id___', id), {'_method': 'DELETE'}, function(){success('{% trans %}Thumbnail removed.{% endtrans %}');});
    }
}

window.delete_playlistpic = function(id, seriesId) {
    if (window.confirm('{% trans %}Are you sure you want to delete this thumbnail?{% endtrans %}')) {
        var url = '{{ path('pumukitnewadmin_seriespic_delete', {'id': '___id___'})|raw }}';
        $.ajax(url.replace('___id___', id), {
            'method': 'DELETE',
            'success': function(){
                       success('{% trans %}Thumbnail removed.{% endtrans %}');
                               url = '{{ path('pumukitnewadmin_playlist_update', {'id': '___id___'})|raw }}';
                                       $('#edit_playlist').load(url.replace('___id___', seriesId), {'_method': 'GET'});
                       }
        });
    }
}

window.up_seriespic = function(id, seriesId) {
    var url = '{{ path('pumukitnewadmin_seriespic_up', {'id': '___id___'})|raw }}';
    var div_id = '#pic_series___seriesId__';
    div_id = div_id.replace('__seriesId__', seriesId);
    $(div_id).load(url.replace('___id___', id), {method:'POST'});
}

window.down_seriespic = function(id, seriesId) {
    var url = '{{ path('pumukitnewadmin_seriespic_down', {'id': '___id___'})|raw }}';
    var div_id = '#pic_series___seriesId__';
    div_id = div_id.replace('__seriesId__', seriesId);
    $(div_id).load(url.replace('___id___', id), {method:'POST'});
}

window.up_playlistpic = function(id, seriesId) {
    var url = '{{ path('pumukitnewadmin_playlistpic_up', {'id': '___id___'})|raw }}';
    var div_id = '#pic_playlist___seriesId__';
    div_id = div_id.replace('__seriesId__', seriesId);
    $(div_id).load(url.replace('___id___', id), {method:'POST'});
}

window.down_playlistpic = function(id, seriesId) {
    var url = '{{ path('pumukitnewadmin_playlistpic_down', {'id': '___id___'})|raw }}';
    var div_id = '#pic_playlist___seriesId__';
    div_id = div_id.replace('__seriesId__', seriesId);
    $(div_id).load(url.replace('___id___', id), {method:'POST'});
}

window.submit_delete_person_relation = function(id, roleId, mmId, hName, template, owner, message)
{
    var default_message = "{% trans %}Are you sure you want to delete the relation of{% endtrans %} "+hName+"?";
    if (message == null) {
        message = default_message;
    }
    if (window.confirm(message)){
        if ('_template' === template){
            var role_id = '#'+roleId+'_person_mms'+template;
        }else{
            var role_id = '#'+roleId+'_person_mms';
        }
        var url = "{{ path('pumukitnewadmin_person_delete_relation', {'id': '__id__', 'roleId': '__roleId__','mmId': '__mmId__', 'owner': '__owner__'})|raw }}";
        url = url.replace('__id__', id);
        url = url.replace('__roleId__', roleId);
        url = url.replace('__mmId__', mmId);
        url = url.replace('__owner__', owner);
        var error_message = '{% trans %}Error deleting Person{% endtrans %} "'+hName+' from MultimediaObject": ';
        var success_message = '{% trans %}Person successfully removed from Multimedia Object{% endtrans %}';
        if ($.trim(message) == $.trim(default_message)) {
            $(role_id).load(url, {'_method': 'DELETE'});
            var url = "{{ path('pumukitnewadmin_mms_show', {'id': '__mmId__'})|raw }}";
            $('#preview_mm').load(url.replace('__mmId__', mmId), function(responseText, textStatus, XMLHttpRequest){
                if(XMLHttpRequest.status >= 400){
                    no_success(error_message + responseText);
                } else {
                    success(success_message);
                }
            });
        } else {
            // Remove and redirect to Series
            $.ajax({
                url: url,
                type: "POST",
                data: {'_method': 'DELETE'},
                error: function(jqXHR, textStatus, errorThrown){
                    message = error_message + errorThrown + ': ' + jqXHR.responseText;
                    no_success(message);
                },
                success: function(data){
                    success(success_message);
                    window.location.href = "{{ path('pumukitnewadmin_series_index') }}";
                }
            });
        }
    }
}

window.submit_delete_link = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this link?{% endtrans %}')){
        var url = "{{ path('pumukitnewadmin_link_delete', {'id': '__id__', 'mmId': '__mmId__'})|raw }}";
        url = url.replace('__id__', id);
        url = url.replace('__mmId__', mmId);
        var div_id = '#links_mms___mmId__';
        div_id = div_id.replace('__mmId__', mmId);
        $(div_id).load(url, {'_method': 'DELETE'});
    }
}

window.update_mmspic = function(mm_id, resource_type) {
    var resource_type = typeof resource_type !== 'undefined' ? resource_type : 'mms';
    var element = document.querySelector('img.pic-' + mm_id + '.first');
    var default_pics = {'mms': '/images/none.jpg', 'series': '/bundles/pumukitschema/images/series_folder.png', 'playlist': '/bundles/pumukitschema/images/playlist_folder.png'};
    var default_pic = default_pics[resource_type] || default_pics['mms'];
    var src = element ? element.src : default_pic;
    $('img.pic-' + mm_id + '.preview').each(function(e, i){e.src = src});
}

window.update_seriespic = window.update_mmspic;
window.update_playlistpic = window.update_mmspic;

window.delete_mmspic = function(id, resourceId) {
    if (window.confirm('{% trans %}Are you sure you want to delete this thumbnail?{% endtrans %}')) {
        var url = '{{ path('pumukitnewadmin_mmspic_delete', {'id': '___id___'})|raw }}';
        var div_id = '#pic_mms___resourceId__';
        div_id = div_id.replace('__resourceId__', resourceId);
        $(div_id).load(url.replace('___id___', id), {'_method': 'DELETE'}, function(){success('{% trans %}Thumbnail removed.{% endtrans %}');});
    }
}

window.delete_eventspic = function(id, resourceId) {
    if (window.confirm('{% trans %}Are you sure you want to delete this event poster?{% endtrans %}')) {
        var url = '{{ path('pumukitnewadmin_mmspic_delete', {'id': '___id___', 'is_event_poster': true})|raw }}';
        var div_id = '#pic_events___resourceId__';
        div_id = div_id.replace('__resourceId__', resourceId);
        $(div_id).load(url.replace('___id___', id), {'_method': 'DELETE'}, function(){success('{% trans %}Event poster removed.{% endtrans %}');});
    }
}

window.up_mmspic = function(id, resourceId) {
    var url = '{{ path('pumukitnewadmin_mmspic_up', {'id': '___id___'})|raw }}';
    var div_id = '#pic_mms___resourceId__';
    div_id = div_id.replace('__resourceId__', resourceId);
    $(div_id).load(url.replace('___id___', id), {method:'POST'});
}

window.down_mmspic = function(id, resourceId) {
    var url = '{{ path('pumukitnewadmin_mmspic_down', {'id': '___id___'})|raw }}';
    var div_id = '#pic_mms___resourceId__';
    div_id = div_id.replace('__resourceId__', resourceId);
    $(div_id).load(url.replace('___id___', id), {method:'POST'});
}

window.upload_mmspic = function(resourceId) {
    var url = '{{ path('pumukitnewadmin_mmspic_list', {'id': '___id___'})|raw }}';
    var div_id = '#pic_mms___resourceId__';
    div_id = div_id.replace('__resourceId__', resourceId);
    $(div_id).load(url.replace('___id___', resourceId));
}


window.check_for_new_pics = function(resourceId, numPics) {
    var uiNumPics = $('.admin-pic-' + resourceId).size();
    if (uiNumPics != numPics) {
        upload_mmspic(resourceId);
    }
}

window.submit_delete_material = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this material?{% endtrans %}')){
        var url = "{{ path('pumukitnewadmin_material_delete', {'id': '__id__', 'mmId': '__mmId__'})|raw }}";
        url = url.replace('__id__', id);
        url = url.replace('__mmId__', mmId);
        var div_id = '#materials_mms___mmId__';
        div_id = div_id.replace('__mmId__', mmId);
        $(div_id).load(url, {'_method': 'DELETE'}, function(){success('{% trans %}Material successfully deleted.{% endtrans %}')});
    }
}

window.submit_delete_external_video = function(id)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this external video?{% endtrans %}')){
        var url = "{{ path('pumukitnewadmin_mms_delete_listexternalproperties', {'id': '__id__'})|raw }}";
        url = url.replace('__id__', id);
        var div_id = '#tracks_mms___mmId__';
        div_id = div_id.replace('__mmId__', id);
        $(div_id).load(url, {'_method': 'DELETE'}, function(){success('{% trans %}External video successfully deleted.{% endtrans %}')});
    }
}

window.submit_delete_track = function(id, mmId, seriesId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this track?{% endtrans %}')){
        var url = "{{ path('pumukitnewadmin_track_delete', {'id': '__id__', 'mmId': '__mmId__'})|raw }}";
        url = url.replace('__id__', id);
        url = url.replace('__mmId__', mmId);
        var div_id = '#tracks_mms___mmId__';
        div_id = div_id.replace('__mmId__', mmId);
        $(div_id).load(url, {'_method': 'DELETE'}, function(){
            update_list(seriesId);
            var showUrl = "{{ path('pumukitnewadmin_mms_show', {'id': '__id__'})|raw }}";
            showUrl = showUrl.replace('__id__', mmId);
            $('#preview_mm').load(showUrl, {'_method': 'POST'});
        });
    }
}

window.update_list = function(seriesId)
{
    var listUrl = "{{ path('pumukitnewadmin_mms_list', {'seriesId': '__seriesId__'})|raw }}";
    listUrl = listUrl.replace('__seriesId__', seriesId);
    $('#list_mms').load(listUrl, {'_method': 'POST'});
}

window.extract_pic = function(trackId, mmId, numframe)
{
    var url = "{{ path('pumukitnewadmin_track_pic', {'id': '__trackId__', 'mmId': '__mmId__', 'preview': 1, 'numframe': '__numframe__'})|raw }}";
    $.ajax({
    url: url.replace('__mmId__', mmId).replace('__trackId__', trackId).replace('__numframe__', numframe),
        type: 'POST',
        beforeSend: function(){
            $('#pic_mms_' + mmId +'_load').show();
        },
        success: function(response){
            $('#pic_mms_' + mmId + '_load').hide();
            $('#pic_mms_' + mmId).html(response);
        },
        error: function(){
        $('#pic_mms_' + mmId +'_load').hide();
            no_success('{% trans %}Error extracting thumbnail{% endtrans %}');
        }
    });
}

window.submit_delete_person = function(id, countMm, personHName)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete the data of{% endtrans %} "+personHName+"?")){
            var url = "{{ path('pumukitnewadmin_person_delete', {'id': '__id__'})|raw }}";
            $('#list_people').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(responseText, textStatus, XMLHttpRequest){
                if(XMLHttpRequest.status >= 400){
                    no_success('{% trans %}Error deleting Person{% endtrans %} "'+personHName+'": ' + responseText);
                }else{
                    success('{% trans %}Person{% endtrans %} "'+personHName+'" {% trans %}successfully deleted.{% endtrans %}');
                }
            });
    }
    }else{
        window.alert('{% trans %}Cannot delete the data of{% endtrans %} '+personHName+'. '+ countMm+' {% trans %}multimedia object(s) contain(s) this person{% endtrans %}.');
    }
}

window.submit_delete_group = function(id, groupName, deleteMessage, canBeDeleted)
{
    if (canBeDeleted == 0) {
        window.alert(deleteMessage);
    } else if (window.confirm(deleteMessage)){
        $('#myModal').modal('hide');
        var url = "{{ path('pumukitnewadmin_group_delete', {'id': '__id__'})|raw }}";
        $('#list_groups').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(responseText, textStatus, XMLHttpRequest){
            if(XMLHttpRequest.status >= 400){
                no_success('{% trans %}Error deleting Group{% endtrans %} "'+groupName+'": ' + responseText);
            }else{
                success('{% trans %}Group{% endtrans %} "'+groupName+'" {% trans %}successfully deleted.{% endtrans %}');
            }
        });
    }
    return false;
}

window.click_fila_url = function(element, tr, url)
{
  $('#preview_'+element).load(url);

  $('.success').removeClass('success');
  $(tr.parentNode).addClass('success');
}

window.click_checkbox_all = function(element, value)
{
  $('input.'+element+'_checkbox').prop('checked', value);
}

window.click_checkbox_changepub_all = function(element, value)
{
  $('input.checkbox_change_pub_mms').prop('checked', value);
}

window.click_checkbox_change_pub_mms = function()
{
  if ($('input.checkbox_change_pub_mms:checked').length == $('input.checkbox_change_pub_mms').length ) {
    $('#warning_modify_series').show();
  } else {
    $('#warning_modify_series').hide();
  }

  if ($('input.checkbox_change_pub_mms:checked').length == 0 ) {
    document.getElementById('pumukitnewadmin_series_broadcast_updategroup_submit').disabled = true;
  } else {
    document.getElementById('pumukitnewadmin_series_broadcast_updategroup_submit').disabled = false;
  }
}

window.click_changepub_selection = function(element, value)
{
    $('input.checkbox_change_pub_mms_all').each(function(){$(this)[0].checked=value});
    $('input.checkbox_change_pub_mms').each(function(){$(this)[0].checked=value});
    return false;
}

window.check_checkbox_all = function(value)
{
    var checkbox_all = $('input.checkbox_change_pub_mms_all');
    if (checkbox_all.prop('checked') && (!value)){
        checkbox_all.prop('checked', value);
    }
}

window.check_checkbox_channel_all = function(channelId, value)
{
    var checkbox_channels = $('input.checkbox_change_pub_channel_'+channelId);
    if (checkbox_channels.prop('checked') && (!value)){
        checkbox_channels.prop('checked', value);
    }
}

window.click_checkbox_channel_changepub_all = function(channelId, value)
{
    $('input.pub_channel_input_checkbox.pub_channel_change_pub_'+channelId).prop('checked', value);
}

window.submit_series_change_pub = function()
{
    $('#myModal').modal('hide');

    var channelsId = [];
    $('input.checkbox_all_channels').each(function(){
        channelsId.push($(this).attr("id"));
    });

    var values = {};
    $('.checkbox_change_pub_mms:checked').each(function(){
        var $this = $(this);
        var mmId = $this.attr("id");
        var channelValues = [];
        var channels = {};
        for (var i = 0; i < channelsId.length; i++){
            var channel = $('#pub_channel_change_pub_'+channelsId[i]+'_mm_'+mmId);
            channels[channelsId[i]] = channel.prop('checked')
        }
        values[mmId] = {'status': $('#status_change_pub_'+mmId+' option:selected').val(), 'channels': channels};
    });
    if (values.size == 0) return false;

    var route = '{{ path('pumukitnewadmin_series_updatepub') }}';
    $('#list_series').load(route, {'_method':'POST', 'values': values});

    return false;
}

window.filter_click_letter = function(letter)
{
  $(".pmk-person-letter.text-pumukit").removeClass("text-pumukit");
  $("#pmk-person-letter-" + letter).addClass("text-pumukit");
  $('#filters_letter').val(letter);
  $('#list_people').load('{{ path('pumukitnewadmin_person_list')|raw }}', $('#filter_people').serialize());
}

window.change_select = function(element, selector, pluralName, seriesId)
{
    var i = selector.val();
    switch(i){
/* TODO
    case 'transc_pause':
        if (confirm('Pausar videos')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/pause', {
                    asynchronous: true,
                    evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
                    parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
                );
        }
        break;
    case 'transc_play':
        if (confirm('Reanudar videos')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/continue', {
                    asynchronous: true,
                    evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
                    parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
                );
        }
        break;
    case 'transc_borrar':
        if (confirm('Borrar objetos multimedia')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/delete', {
        asynchronous: true,
        evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
        parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
                );
        }
        break;
    case 'transc_limpiar':
        if (confirm('Limpiar videos completados del listado')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/clean', {
                    asynchronous: true,
                    evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
                    parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
                );
        }
        break;
*/

    case 'delete_selected':
        var ids = [];
        $('.' + element + '_checkbox:checked').each(function(){
            var $this = $(this);
            ids.push($this.attr("id"));
        });
        if (ids.length == 0) break;
        if (pluralName.indexOf('user') != -1) {
            var aux = $('#numberUsers').html().replace(/(\r\n|\n|\r)/gm,"");
            numberUsers = $.trim(aux);
            var usersLength = parseInt(numberUsers.split(" ")[0]);
            if (((ids.length == usersLength) || (1 == usersLength)) && (pluralName.indexOf('user') != -1)) {
                var message = '{% trans %}Can not delete all users{% endtrans %}';
                no_success(message);
                break;
            }
        }
        if (confirm('{% trans %}Are you sure?{% endtrans %}')) {
            var route = get_batch_delete_route(element, ids);
            if (pluralName.indexOf('mms') != -1){
                var message = '{% trans %}Multimedia Object(s) successfully deleted.{% endtrans %}';
            }else{
                var message = pluralName.charAt(0).toUpperCase()+pluralName.slice(1)+' {% trans %}successfully deleted.{% endtrans %}';
            }
            $.ajax({
                    url: route,
                    type: 'POST',
                    data: {'_method': 'DELETE'},
                    error: function(jqXHR, textStatus, errorThrown){
                        if (pluralName.indexOf('tags') != -1){
                            var textError = eval('('+jqXHR.responseText+')');
                            var statusError = textError.status;
                            var message = errorThrown+': {% trans %}Tags with children can not be deleted.{% endtrans %} '+statusError;
                            no_success(message);
                        }else{
                            no_success(errorThrown + ': ' + jqXHR.responseText);
                        }
                    },
                    success: function(response){
                                        if (pluralName.indexOf('mms') != -1){
                                            var sessionId = $($('tr.success').find('input.mm_checkbox')[0]).attr('id');
                                            if (ids.indexOf(sessionId) != -1) {
                                                $('#preview_mm').html('{% trans %}Select any multimedia object.{% endtrans %}');
                                                $('#edit_mm').html('');
                                            }
                                        } else if (pluralName.indexOf('series') != -1){
                                            var sessionId = $($('tr.success').find('input.series_checkbox')[0]).attr('id');
                                            if (ids.indexOf(sessionId) != -1) {
                                                $('#preview_series').html('{% trans %}Select any series.{% endtrans %}');
                                                $('#edit_series').html('');
                                            }
                                        }
                                        $('#list_'+pluralName).html(response);
                                        success(message);
                    }
            });
        }
        break;

    case 'delete_selected_groups':
        var ids = [];
        $('.' + element + '_checkbox:checked').each(function(){
            var $this = $(this);
            ids.push($this.attr("id"));
        });
        if (ids.length == 0) break;
        if (confirm('{% trans %}Are you sure you want to delete selected groups?{% endtrans %}')) {
            var route = get_batch_delete_route(element, ids);
            var sucess = true;
            var messge = '';
            $.ajax({
                    url: route,
                    type: 'POST',
                    data: {'_method': 'DELETE'},
                    error: function(jqXHR, textStatus, errorThrown){
                            message = errorThrown + ': ' + jqXHR.responseText;
                            use_success = false;
                    },
                    success: function(response){
                            message = response;
                            use_success = true;
                    }
            }).always(function(data, textStatus, jqXHR){
                var list_route = '{{ path('pumukitnewadmin_group_list')|raw }}';
                $('#list_groups').load(list_route, {'_method': 'POST'});
                if (use_success) {
                    success(message);
                } else {
                    no_success(message);
                }
            });
        }
        break;
/* TODO
    case 'serial_master':
    Modalbox.show('/editar.php/transcoders/masterserial', {title:'Master Multimedia', width:800});
        selector.selectedIndex = 0;
        break;
      //separar honores sel
    case 'inv_working_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/working', {
        asynchronous: true,
        evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
        parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
            );
        break;
      //separar honores sel
    case 'inv_working_all':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/working', {
        asynchronous: true,
        evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
        parameters: 'all=1'}
            );
        break;
*/
    case 'order_manual':
        var route = '{{ path('pumukitnewadmin_mms_reorder', {'seriesId': '__seriesId__', 'sorting': 0, 'fieldName': 'rank', 'order': 'asc'})|raw }}';
        $('#list_'+element+'s').load(route.replace('__seriesId__', seriesId), {'_method': 'POST'}, function(){sort_optiont_change('order_manual');});
        break;
    case 'order_rec_date_asc':
        var route = '{{ path('pumukitnewadmin_mms_reorder', {'seriesId': '__seriesId__', 'sorting': 4, 'fieldName': 'record_date', 'order': 'asc'})|raw }}';
        $('#list_'+element+'s').load(route.replace('__seriesId__', seriesId), {'_method': 'POST'}, function(){sort_optiont_change('order_rec_date_asc');});
        break;
    case 'order_rec_date_desc':
        var route = '{{ path('pumukitnewadmin_mms_reorder', {'seriesId': '__seriesId__', 'sorting': 3, 'fieldName': 'record_date', 'order': 'desc'})|raw }}';
        $('#list_'+element+'s').load(route.replace('__seriesId__', seriesId), {'_method': 'POST'}, function(){sort_optiont_change('order_rec_date_desc');});
        break;
    case 'order_pub_date_asc':
        var route = '{{ path('pumukitnewadmin_mms_reorder', {'seriesId': '__seriesId__', 'sorting': 1, 'fieldName': 'public_date', 'order': 'asc'})|raw }}';
        $('#list_'+element+'s').load(route.replace('__seriesId__', seriesId), {'_method': 'POST'}, function(){sort_optiont_change('order_pub_date_asc');});
        break;
    case 'order_pub_date_desc':
        var route = '{{ path('pumukitnewadmin_mms_reorder', {'seriesId': '__seriesId__', 'sorting': 2, 'fieldName': 'public_date', 'order': 'desc'})|raw }}';
        $('#list_'+element+'s').load(route.replace('__seriesId__', seriesId), {'_method': 'POST'}, function(){sort_optiont_change('order_pub_date_desc');});
        break;
    case 'order_abc':
        var route = '{{ path('pumukitnewadmin_mms_reorder', {'seriesId': '__seriesId__', 'sorting': 5, 'fieldName': 'title.es', 'order': 'asc'})|raw }}';
        $('#list_'+element+'s').load(route.replace('__seriesId__', seriesId), {'_method': 'POST'}, function(){sort_optiont_change('order_abc');});
        break;
    case 'cut_mm':
        var ids = [];
        $('.' + element + '_checkbox:checked').each(function(){
            var $this = $(this);
            ids.push($this.attr("id"));
        });
        if (ids.length == 0) {
            var message = '{% trans %}No multimedia object selected{% endtrans %}';
            no_success(message);
            break;
        }
        var route = '{{ path('pumukitnewadmin_mms_cut', {'ids': '__ids__'})|raw }}';
        $.ajax({
                url: route.replace('__ids__', JSON.stringify(ids)),
                type: 'GET',
                success: function(response){
                            var paste_mm_text = '{% trans %}Paste multimedia objects{% endtrans %} (';
                            for (var i = 0; i < response.length; i++) {
                                paste_mm_text += response[i];
                                if (i == (response.length - 1)) paste_mm_text += ')';
                                else paste_mm_text += ', ';
                            }
                            $('#options_mms #paste_mm').html(paste_mm_text).show();
                            $('.' + element + '_checkbox:checked').each(function(){
                                var $this = $(this);
                                $this[0].checked = false;
                            });
                            if (ids.length == 1) var message = '{% trans %}Multimedia Object cut. Paste it in the desire Series.{% endtrans %}';
                            else var message = '{% trans %}Multimedia Objects cut. Paste them in the desire Series.{% endtrans %}';
                            success(message);
                }
        });
        break;
    case 'paste_mm':
        if (confirm('{% trans %}Paste multimedia object(s) in this series?{% endtrans %}')) {
            var route = '{{ path('pumukitnewadmin_mms_paste', {'seriesId': '__seriesId__'})|raw }}';
            $('#list_'+element+'s').load(route.replace('__seriesId__', seriesId), {'_method':'POST'}, function(){
                $('#options_mms #paste_mm').hide();

                var message = '{% trans %}Multimedia Object(s) pasted in the Series.{% endtrans %}';
                success(message);
            });
        }
        break;
    case 'add_playlist':
        var ids = [];
        $('.' + element + '_checkbox:checked').each(function(){
            var $this = $(this);
            ids.push($this.attr("id"));
        });
        if (ids.length == 0) {
            var message = '{% trans %}No multimedia object selected{% endtrans %}';
            no_success(message);
          break;
        }

        var url = "{{ path('pumukitnewadmin_playlistmms_modal_add', {'ids': '__ids__'})|raw }}";
        $.ajax({
            url: url.replace('__ids__', JSON.stringify(ids)),
            type: 'GET',
            success: function(response){
                var $modal = $('#myModal');
                $modal.modal({backdrop: 'static'});
                $modal.find('.modal-content').html(response);
            }
        });
        break;
/* TODO
      //status mm
    case 'set_status_0_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/0', {
        asynchronous: true,
        evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
        parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
            );
        break;
    case 'set_status_1_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/1', {
        asynchronous: true,
        evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
        parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
            );
        break;
    case 'set_status_2_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/2', {
        asynchronous: true,
        evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
        parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
            );
        break;
    case 'set_status_3_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/3', {
        asynchronous: true,
        evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
        parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
            );
        break;
*/
    case 'invert_announce_selected':
        var ids = [];
        $('.' + element + '_checkbox:checked').each(function(){
            var $this = $(this);
            ids.push($this.attr("id"));
        });
        if (ids.length == 0) break;
        if (confirm('{% trans %}Are you sure?{% endtrans %}')) {
            if ('series' == element)
                var route = '{{ path('pumukitnewadmin_series_invert_announce', {'ids': '__ids__'})|raw }}';
            else
                var route = '{{ path('pumukitnewadmin_mms_invert_announce', {'ids': '__ids__'})|raw }}';
            $('#list_'+pluralName).load(route.replace('__ids__', JSON.stringify(ids)));
        }
        var editSeriesId = $("#inputROId").val();
        var editMmId = $("#inputMMId").val();
        for (var i = 0; i < ids.length; i++) {
            id = ids[i];
            if (('mm' == element) && (id == editMmId)){
                var puDeNew = $("#list_pubdecisions_"+id+" #pub_decisions_PUDENEW");
                if (1 == puDeNew.length){
                    var checkedValue = puDeNew[0].checked;
                    if (checkedValue) puDeNew[0].checked = false;
                    else puDeNew[0].checked = true;
                }
            } else if (('series' == element) && (id == editSeriesId)) {
                var announcedSeries = $("#pumukitnewadmin_series_announce");
                if (1 == announcedSeries.length){
                    var checkedValue = announcedSeries[0].checked;
                    if (checkedValue) announcedSeries[0].checked = false;
                    else announcedSeries[0].checked = true;
                }
            }
        }
        break;
/* TODO
    case 'inv_announce_virtualserial_sel':
        new Ajax.Updater('list_mms', '/editar.php/virtualserial/inv/field/announce', {
            asynchronous: true,
            evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
            parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
                        );
        break;
*/
    case 'promote_to':
        var ids = $('.' + element + '_checkbox:checked.nosuperadmin').map(function(i, e){return e.id}).get();

        if (ids.length == 0) {
           no_success('{% trans %}Select any user.{% endtrans %}');
           break;
        }

        var node = selector.find(':selected');
        var profile = node.data('profile');
        var profilename = node.data('profilename');
        $.ajax({
            url: '{{ path('pumukitnewadmin_user_promote')|raw }}',
            type: 'POST',
            data: {'ids': ids, 'profile': profile},
            error: function(jqXHR, textStatus, errorThrown){
                no_success('{% trans %}Error promoting user{% endtrans %}.');
            },
            success: function(response){
                ids.forEach(function(e){$('#profile'+e).html(profilename)})
                $('.' + element + '_checkbox:checked').each(function(){
                    var $this = $(this);
                    $this[0].checked = false;
                });
                success('{% trans %}Users updated.{% endtrans %}');
            },
        });

        break;

    }
    selector.val('default');
}



function sort_optiont_change(target_val)
{
  e = $("#options_mms option[data-type='sort'][data-active='1']");
  e[0].dataset.active = '0';
  e.text(e.text().replace("{% trans %}(active){% endtrans %}", ''))
  e = $("#options_mms option[data-type='sort'][value='" + target_val + "']");
  e[0].dataset.active = '1';
  e.text(e.text() + "{% trans %}(active){% endtrans %}");

}

/**
 * Tag tree functions
 */

function select_tree_tag(element)
{
  $(element).siblings(".active").removeClass("active").end().addClass("active");
  return false;
}

function toggle_tree_tag(element, id, mm_id, tag_id, tag_cod)
{
  parent = $(element.parentElement);

 var search_text=$("#filter_tags_"+tag_id).val().trim();

  if (parent.hasClass("notload") && !parent.hasClass("searchresult")) {
    parent.removeClass("notload");

    var route = "{{ path('pumukitnewadmin_mms_getchildrentag', {'id': 'PLACEHOLDER_TAG_ID'})|raw }}";
    route = route.replace('PLACEHOLDER_MM_ID', mm_id).replace('PLACEHOLDER_TAG_ID', id);

    $.get(route + "?tag_id=" + tag_id + "&mm_id=" + mm_id, function(responseText, textStatus, jqXHR){
        parent.after(responseText);
    });
    parent.addClass("expanded").removeClass("collapsed");
  } else {
    if (parent.hasClass("expanded")) {
      parent.removeClass("searchresult");
      $(".c_" + tag_cod).hide();
      $(".c_" + tag_cod+".expanded").removeClass("expanded").addClass("collapsed");
      parent.removeClass("expanded").addClass("collapsed");
    } else {
      $(".tag_li_parent_" + id).show();
      parent.addClass("expanded").removeClass("collapsed");
    }

  }

}

// TODO
function toggle_show_all()
{
  // SHOW - Quito el punto a los nodos que muestran sus hijos al desocultar
  $$(".expanded.element, .collapsed.element").each(function(e){
    e.removeClassName("element");
  });

  // SHOW & HIDE - Oculto/Muestro elementos finales que no tiene objetos multimedia
  $$(".nomm.element").each(function(e){
    e.toggleClassName("nodisplayall");
  });

  // SHOW & HIDE - Oculto/Muestro elementos todos sus hijos son finales sin objetos multimedia
  $$(".nomm.expanded, .nomm.collapsed").each(function(e){
    if (e.getElementsBySelector("li.nomm").length == e.getElementsBySelector("li").length) {
      e.toggleClassName("nodisplayall");
    }
  });

  // HIDE - Pongo el punto a los nodos que se quedan sin hijos al ocultar
  $$(".nomm").each(function(e){
    p = e.parentElement.parentElement;
    if (p.getElementsBySelector("li.nodisplayall").length == p.getElementsBySelector("li").length) {
      p.addClassName("element");
    }
  });

}


function create_element_in_select(tag, block_tag_id, mm_id) {
  var $ul = $("#select_ul_tag_cod_" + block_tag_id);
  {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::SHOW_CODES')) %}
  var text = tag.cod + ' - ' + tag.name;
  {% else %}
  var text = tag.name;
  {% endif %}
  $ul.append('<a href="#" ondblclick="javascript:del_tree_tag(\'' + tag.id + '\', \'' + mm_id +'\');" onclick="return select_tree_tag(this);" class="list-group-item tag-rm-' + tag.cod + '" id="select_li_' + tag.id + '">' +  text +'</a>');
}

function inc_num_mm(tag_id, num)
{
  var aux = $("#info_num_mm_" + tag_id);
  if (aux){
    var nn = (parseInt(aux.text()) + num);
    aux.text(nn);
  }
}

function add_tree_tag(tag_id, mm_id, block_tag_id)
{
  var route = "{{ path('pumukitnewadmin_mms_addtag', {'id': 'PLACEHOLDER_MM_ID', 'tagId': 'PLACEHOLDER_TAG_ID' })|raw }}";
  route = route.replace('PLACEHOLDER_MM_ID', mm_id).replace('PLACEHOLDER_TAG_ID', tag_id);
  $.post(route, {"tag": tag_id}, function(data, textStatus, jqXHR){
    for (var i=0; i < data.added.length; i++) {
      var c = data.added[i];
      !data.prototype && inc_num_mm(c.id, 1);
      var aux = c.group.split("|");
      if(aux[1] && aux.length > 3) create_element_in_select(c, aux[1], mm_id);
    }
    var url = "{{ path('pumukitnewadmin_mms_show', {'id': '__mmId__'}) }}";
    $('#preview_mm').load(url.replace('__mmId__', mm_id));
  });
}


function del_tree_tag(tag_id, mm_id)
{
  var route = "{{ path('pumukitnewadmin_mms_deletetag', {'id': 'PLACEHOLDER_MM_ID', 'tagId': 'PLACEHOLDER_TAG_ID' })|raw }}";
  route = route.replace('PLACEHOLDER_TAG_ID', tag_id).replace('PLACEHOLDER_MM_ID', mm_id);
  $.ajax({
    url: route,
    type: 'DELETE',
    parameters: {'_method': 'DELETE'},
    success: function(response){
      for (var i=0; i<response.deleted.length; i++) {
        var c = response.deleted[i];
        var $_element = $("#select_li_" + c.id);
        if ($_element)  $_element.remove();
        !response.prototype && inc_num_mm(c.id, -1);
      }
      var url = "{{ path('pumukitnewadmin_mms_show', {'id': '__mmId__'}) }}";
      $('#preview_mm').load(url.replace('__mmId__', mm_id));
    }
  });
}


var filter_wrapper_timeout;
function search_tags_wrapper(mmId, parentid){
    if(typeof filter_wrapper_timeout != 'undefined') {
        clearTimeout(filter_wrapper_timeout);
    }
    $("#tag_filter_" + parentid + "_loader").css('opacity','1');
    filter_wrapper_timeout = setTimeout(search_tags, 300, event.target, mmId, parentid);
}
function search_tags(target, mmId, parentid)
{
    var search_text=target.value;
    search_text = search_text.trim();
    //$("#tag_filter_" + parentid + "_loader").show();
    //if(/\S/.test(search_text) && /\w([%\s]*)\w([%\s]*)\w/.test(search_text)) {
    if(/[0-9a-z\u00E0-\u00FC]{3,}/i.test(search_text)) {

        var route = "{{ path('pumukitnewadmin_mms_searchtag') }}";
        $("#all_tag_"+ parentid ).load(route + "?search_text=" + encodeURIComponent(search_text) + "&mmId=" + mmId + "&parent=" + parentid,
                                       function() {
                                           $("#all_tag_" + parentid + " .list-group-item.collapsed").removeClass("collapsed").addClass("searchresult expanded");
                                           $("#tag_filter_" + parentid + "_loader").css('opacity', '0');
                                       });
    } else {
        reset_tags(mmId, parentid);
    }
}
function reset_tags(mmId, parentid){
    var route = "{{ path('pumukitnewadmin_mms_reloadtags') }}";
    $("#all_tag_"+ parentid ).load( route + "?mmId=" + mmId + "&parentId=" + parentid,
                                    function() {
                                        $("#tag_filter_" + parentid + "_loader").css('opacity', '0');
                                    });
    $("#all_tag_" + parentid + " a span").removeClass("highlighted");//.addClass("tag notresult");
}

window.click_fila_edit_urls = function(element, tr, show_url, update_url)
{
    $('#preview_'+element).load(show_url);

    $('#edit_'+element).load(update_url, function(){init_tabs();});

    $('.success').removeClass('success');
    $(tr.parentNode).addClass('success');
}

window.dblclick_fila_url = function(element, tr, url)
{
    document.location.href= (url);
}

window.dblclick_preview_mm = function(id)
{
    var url = "{{ path('pumukitnewadmin_mms_modal_preview', {'id': '__id__'})|raw }}";
    $.ajax({
        url: url.replace('__id__', id),
        type: 'GET',
        success: function(response){
            var $modal = $('#myModal');
            $modal.modal({backdrop: 'static'});
            $modal.find('.modal-content').html(response);
        }
    });
}


function filter_series(form)
{
    var from_date = $('#filters_date_from');
    var to_date = $('#filters_date_to');

    if (to_date.val() != "" && from_date.val() >= to_date.val()) {
        to_date[0].setCustomValidity("{% trans %}From date must be less than to date{% endtrans %}");
    }else{
        $('#list_series').load('{{ path('pumukitnewadmin_series_list')|raw }}', $(form).serialize());
    }

    return false;
}

function comprobar_date(date, re){
    return !re.test(date);
}

procesaOk = function(){
  $('#remember_save_mm_pub').hide();
  return true;
}
procesaReset = function(){
  $('#remember_save_mm_pub').hide();
  $('#error_start1').hide();
  $('#error_end1').hide();
  $('#error_start2').hide();
  $('#error_end2').hide();
}

/**
 * Global Ajax Event Handlers and Config
 */
$.ajaxSetup({
  cache: true
});

$(document).ajaxSuccess(function() {
  $.material.init();
  $("body").tooltip({
    selector: '[data-toggle="tooltip"]'
  });
});

$(document).ajaxError(function(event, xhr, settings) {
  if (403 == xhr.status) {
    window.location.href = window.location.href;  // "{{ path('fos_user_security_login') }}";
  }
});


/**
 * Init material on load
 */
$(function() {
  $.material.init();

  $('body').on('hidden.bs.modal', '.pmk-modal', function () {
    $(this).removeData('bs.modal').find('.modal-content').html('');
  });

  $('body').on('shown.bs.modal loaded.bs.modal', '.pmk-modal', function () {
    if ($('.modal.fade.in:focus').length != 0) {
      $(this).find('input:text').first().focus();
    }
  });

  init_tabs();
  init_event_tab();

  $('#pumukitnewadmin_mms_new_button').on('click', function () {
    var seriesId = $('#mms_series_id').val();
    var route = "{{ path('pumukitnewadmin_mms_create', {'id': '__seriesId__'}) }}";
    route = route.replace('__seriesId__', seriesId);
    $.ajax(route, {
            type: 'GET',
        error: function(jqXHR, textStatus, errorThrown){
                        var responseText = jqXHR.responseText.split("<title>").pop().split("</title>").shift();
                        var message = responseText.replace(/(\r\n|\n|\r)/gm,"");
                        no_success(errorThrown+': '+textStatus+', '+message);
        },
        success: function(response, textStatus, jqXHR){
            var seriesId = response['seriesId'];
            var mmId = response['mmId'];

            // NOTE: Important to call listAction first to update multimedia object id in session
            var routeList = "{{ path('pumukitnewadmin_mms_list', {'id': '__seriesId__', 'newMmId': '__newMmId__'}) }}";
            routeList = routeList.replace('__newMmId__', mmId);
            $('#list_mms').load(routeList.replace('__seriesId__', seriesId), {'_method':'POST'}, function(){
                var routeShow = "{{ path('pumukitnewadmin_mms_show', {'id': '__mmId__'}) }}";
                $('#preview_mm').load(routeShow.replace('__mmId__', mmId), {'_method':'POST'});

                var routeEdit = "{{ path('pumukitnewadmin_mms_edit', {'id': '__mmId__', 'seriesId': '__seriesId__'}) }}";
                routeEdit = routeEdit.replace('__seriesId__', seriesId);
                $('#edit_mm').load(routeEdit.replace('__mmId__', mmId), function(){
                    init_tabs();
                });
            });
            success('{% trans %}Multimedia Object successfully created.{% endtrans %}');
        }
    });

    return false;
  });

  $('#pumukitnewadmin_series_new_button').on('click', function () {
    var route = "{{ path('pumukitnewadmin_series_create') }}";
    $('#filter_series')[0].reset();
    $.ajax(route, {
            type: 'GET',
            error: function(jqXHR, textStatus, errorThrown){
                        var responseText = jqXHR.responseText.split("<title>").pop().split("</title>").shift();
                        var message = responseText.replace(/(\r\n|\n|\r)/gm,"");
                        no_success(errorThrown+': '+textStatus+', '+message);
            },
            success: function(response, textStatus, jqXHR){
                var seriesId = response['seriesId'];

                // NOTE: Important to call listAction first to update series id in session
                var routeList = "{{ path('pumukitnewadmin_series_list', {'selectedSeriesId': '__seriesId__'})|raw }}";
                $('#list_series').load(routeList.replace('__seriesId__', seriesId), function(){
                    var routeShow = "{{ path('pumukitnewadmin_series_show', {'id': '__seriesId__'})|raw }}";
                    $('#preview_series').load(routeShow.replace('__seriesId__', seriesId));
                    var routeUpdate = "{{ path('pumukitnewadmin_series_update', {'id': '__seriesId__'})|raw }}";
                    $('#edit_series').load(routeUpdate.replace('__seriesId__', seriesId), function(){
                        init_tabs();
                    });
                });
                success('{% trans %}Series successfully created.{% endtrans %}');
            }
    });
    return false;
  });
  $('#pumukitnewadmin_playlist_new_button').on('click', function () {
    var route = "{{ path('pumukitnewadmin_playlist_create') }}";
    $('#filter_playlist')[0].reset();
    $.ajax(route, {
            type: 'POST',
            error: function(jqXHR, textStatus, errorThrown){
                        var responseText = jqXHR.responseText.split("<title>").pop().split("</title>").shift();
                        var message = responseText.replace(/(\r\n|\n|\r)/gm,"");
                        no_success(errorThrown+': '+textStatus+', '+message);
            },
            success: function(response, textStatus, jqXHR){
                var playlistId = response['playlistId'];

                // NOTE: Important to call listAction first to update series id in session
                var routeList = "{{ path('pumukitnewadmin_playlist_list', {'selectedSeriesId': '__playlistId__'})|raw }}";
                $('#list_playlists').load(routeList.replace('__playlistId__', playlistId), function(){
                    var routeShow = "{{ path('pumukitnewadmin_playlist_show', {'id': '__playlistId__'})|raw }}";
                    $('#preview_playlist').load(routeShow.replace('__playlistId__', playlistId));
                    var routeUpdate = "{{ path('pumukitnewadmin_playlist_update', {'id': '__playlistId__'})|raw }}";
                    $('#edit_playlist').load(routeUpdate.replace('__playlistId__', playlistId), function(){
                        init_tabs();
                    });
                });
                success('{% trans %}Playlist successfully created.{% endtrans %}');
            }
    });
    return false;
  });



  {% if is_naked() %}
    var naked_modal_handler = function (e) {
      var modal_dialog = $(e.currentTarget).find('.modal-dialog');
      var clicked_link = e.relatedTarget;
      var modal_top = clicked_link.getBoundingClientRect().top - 50 - modal_dialog.height();
      if (modal_top < 26) modal_top = 26;
      modal_dialog.css("margin", modal_top +"px auto 30px");
    };

  $('#myModal').on('shown.bs.modal', naked_modal_handler);
  $('#myAuxModal').on('shown.bs.modal', naked_modal_handler);
  {% endif %}


});

$(document).on('click', '#pumukitnewadmin_series_title_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_series_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_series_list', {'selectedSeriesId': '__inputROId__', 'sorting': {'title': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_series_list', {'sorting': {'title': '__type__'}})|raw }}";
    }
    $('#list_series').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_series_title_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_series_list', {'selectedSeriesId': '__inputROId__', 'sorting': {'title': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_series_list', {'sorting': {'title': 'asc'}})|raw }}";
    }
    $('#list_series').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_series_public_date_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_series_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_series_list', {'selectedSeriesId': '__inputROId__', 'sorting': {'public_date': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_series_list', {'sorting': {'public_date': '__type__'}})|raw }}";
    }
    $('#list_series').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_series_public_date_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_series_list', {'selectedSeriesId': '__inputROId__', 'sorting': {'public_date': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_series_list', {'sorting': {'public_date': 'asc'}})|raw }}";
    }
    $('#list_series').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_series_multimedia_objects_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_series_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_series_list', {'selectedSeriesId': '__inputROId__', 'sorting': {'multimedia_objects': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_series_list', {'sorting': {'multimedia_objects': '__type__'}})|raw }}";
    }
    $('#list_series').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_series_multimedia_objects_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_series_list', {'selectedSeriesId': '__inputROId__', 'sorting': {'multimedia_objects': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_series_list', {'sorting': {'multimedia_objects': 'asc'}})|raw }}";
    }
    $('#list_series').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_person_post_sort_selected', function(){
    var inputRawId = $('#inputRawId').val();
    var type = $('#pumukitnewadmin_person_sort_change_type').val();
    var locale = "{{ app.request.getLocale() }}";
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'post.__lang__': '__type__'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'post.__lang__': '__type__'}})|raw }}";
    }
    route = route.replace('__lang__', locale);
    $('#list_people').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_person_post_sort_not_selected', function(){
    var inputRawId = $('#inputRawId').val();
    var locale = "{{ app.request.getLocale() }}";
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'post': 'asc'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'post.__lang__': 'asc'}})|raw }}";
    }
    route = route.replace('__lang__', locale);
    $('#list_people').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_person_id_sort_selected', function(){
    var inputRawId = $('#inputRawId').val();
    var type = $('#pumukitnewadmin_person_sort_change_type').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'id': '__type__'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'id': '__type__'}})|raw }}";
    }
    $('#list_people').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_person_id_sort_not_selected', function(){
    var inputRawId = $('#inputRawId').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'id': 'asc'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'id': 'asc'}})|raw }}";
    }
    $('#list_people').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_person_name_sort_selected', function(){
    var inputRawId = $('#inputRawId').val();
    var type = $('#pumukitnewadmin_person_sort_change_type').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'name': '__type__'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'name': '__type__'}})|raw }}";
    }
    $('#list_people').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_person_name_sort_not_selected', function(){
    var inputRawId = $('#inputRawId').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'name': 'asc'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'name': 'asc'}})|raw }}";
    }
    $('#list_people').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_person_email_sort_selected', function(){
    var inputRawId = $('#inputRawId').val();
    var type = $('#pumukitnewadmin_person_sort_change_type').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'email': '__type__'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'email': '__type__'}})|raw }}";
    }
    $('#list_people').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_person_email_sort_not_selected', function(){
    var inputRawId = $('#inputRawId').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'email': 'asc'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'email': 'asc'}})|raw }}";
    }
    $('#list_people').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_person_phone_sort_selected', function(){
    var inputRawId = $('#inputRawId').val();
    var type = $('#pumukitnewadmin_person_sort_change_type').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'phone': '__type__'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'phone': '__type__'}})|raw }}";
    }
    $('#list_people').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_person_phone_sort_not_selected', function(){
    var inputRawId = $('#inputRawId').val();
    if (inputRawId) {
        var route = "{{ path('pumukitnewadmin_person_list', {'selectedPersonId': '__inputRawId__', 'sorting': {'phone': 'asc'}})|raw }}";
        route = route.replace('__inputRawId__', inputRawId);
    } else {
        var route = "{{ path('pumukitnewadmin_person_list', {'sorting': {'phone': 'asc'}})|raw }}";
    }
    $('#list_people').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_group_name_sort_selected', function(){
    var type = $('#pumukitnewadmin_group_sort_change_type').val();
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'name': '__type__'}})|raw }}";
    $('#list_groups').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_group_name_sort_not_selected', function(){
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'name': 'asc'}})|raw }}";
    $('#list_groups').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_group_key_sort_selected', function(){
    var type = $('#pumukitnewadmin_group_sort_change_type').val();
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'key': '__type__'}})|raw }}";
    $('#list_groups').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_group_key_sort_not_selected', function(){
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'key': 'asc'}})|raw }}";
    $('#list_groups').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_group_origin_sort_selected', function(){
    var type = $('#pumukitnewadmin_group_sort_change_type').val();
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'origin': '__type__'}})|raw }}";
    $('#list_groups').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_group_origin_sort_not_selected', function(){
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'origin': 'asc'}})|raw }}";
    $('#list_groups').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_group_comments_sort_selected', function(){
    var type = $('#pumukitnewadmin_group_sort_change_type').val();
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'comments': '__type__'}})|raw }}";
    $('#list_groups').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_group_comments_sort_not_selected', function(){
    var route = "{{ path('pumukitnewadmin_group_list', {'sorting': {'comments': 'asc'}})|raw }}";
    $('#list_groups').load(route, {'_method':'POST'});
    return false;
});

/**
 * Tab
 */
function init_tabs()
{
  $mmTab = $('#menuTab');
  if($mmTab) {
    $mmTab.on('show.bs.tab', function (e) {
      where = e.target.href.split('#')[1];
      localStorage.setItem('lastMmTab', where);
    });

    var lastMmTab = localStorage.getItem('lastMmTab');
    if (lastMmTab) {
      $('#menuTab a[href="#' + lastMmTab+ '"]').tab('show');
    }
  }

  $seriesTab = $('#seriesTab');
  if($seriesTab) {
    $seriesTab.on('show.bs.tab', function (e) {
      where = e.target.href.split('#')[1];
      localStorage.setItem('lastSeriesTab', where);
    });

    var lastSeriesTab = localStorage.getItem('lastSeriesTab');
    if (lastSeriesTab) {
      $('#seriesTab a[href="#' + lastSeriesTab+ '"]').tab('show');
    }
  }

  $templateTab = $('#templateTab');
  if($templateTab) {
    $templateTab.on('show.bs.tab', function (e) {
      where = e.target.href.split('#')[1];
      localStorage.setItem('lastTemplateTab', where);
    });

    var lastTemplateTab = localStorage.getItem('lastTemplateTab');
    if (lastTemplateTab) {
      $('#templateTab a[href="#' + lastTemplateTab+ '"]').tab('show');
    }
  }
}

$(document).on('load', '#list_events', function() {init_event_tab();});

updatesession = function(tab){
    if ('calEvent' == tab) var route = '{{ path('pumukitnewadmin_event_updatesession', {'activeTab': 'calEvent'})|raw }}';
    else var route = '{{ path('pumukitnewadmin_event_updatesession')|raw }}';
    $.ajax({
            url: route,
            type: 'GET',
    });
}

$(document).on('click', '#previousMonth', function(){
    $('#list_events').load('{{ path('pumukitnewadmin_event_list', {'month': 'previous'})|raw }}', {'_method':'POST'});
    return false;
});

$(document).on('click', '#todayMonth', function(){
    $('#list_events').load('{{ path('pumukitnewadmin_event_list', {'month': 'today'})|raw }}', {'_method':'POST'});
    return false;
});

$(document).on('click', '#nextMonth', function(){
    $('#list_events').load('{{ path('pumukitnewadmin_event_list', {'month': 'next'})|raw }}', {'_method':'POST'});
    return false;
});

// To keep listening on the event after jquery load
$(document).on('show.bs.tab', '#eventTab', function(e){
    where = e.target.href.split('#')[1];
    localStorage.setItem('lastEventTab', where);
    // Update session
    if ('calEvent' == where) updatesession('calEvent');
    else updatesession('');
});

/**
 * Event List/Calendar Tabs
 */
function init_event_tab()
{
  $eventTab = $('#eventTab');
  if($eventTab) {
    $eventTab.on('show.bs.tab', function (e) {
      where = e.target.href.split('#')[1];
      localStorage.setItem('lastEventTab', where);
    });

    var lastEventTab = localStorage.getItem('lastEventTab');
    if (lastEventTab) {
      $('#eventTab a[href="#' + lastEventTab+ '"]').tab('show');
    }
  }
}

/**
 * Test from URL
 */
test_form_url = function(url){
    if (test_url_generation(url)){
        window.alert('{% trans %}The given URL is not valid{% endtrans %}.');
        return false;
    }
    return true;
}

/**
 * Test URL generation
 */
test_url_generation = function(url){
    var re=/^(?:(?:https?):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\x{00a1}\-\x{ffff}0-9]+-?)*[a-z\x{00a1}\-\x{ffff}0-9]+)(?:\.(?:[a-z\x{00a1}\-\x{ffff}0-9]+-?)*[a-z\x{00a1}\-\x{ffff}0-9]+)*(?:\.(?:[a-z\x{00a1}\-\x{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/;
    return !re.test(url);
}

comprobar_form_file_nmb = function(file){
    if (file == ""){
    $('#error_file').show();
    return false;
    }
    return true;
}

/**
 * Initialize all tooltips
 */
$(function () {
  $('[data-toggle="tooltip"]').tooltip()
})

/**
 * Get batch delete route according to element
 */
get_batch_delete_route = function(element, ids)
{
    var route = ids;

    switch (element) {
        case 'person':
            route = '{{ path('pumukitnewadmin_person_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'series':
            route = '{{ path('pumukitnewadmin_series_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'playlist':
            route = '{{ path('pumukitnewadmin_playlist_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'seriestype':
            route = '{{ path('pumukitnewadmin_seriestype_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'mm':
            route = '{{ path('pumukitnewadmin_mms_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'live':
            route = '{{ path('pumukitnewadmin_live_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'event':
            route = '{{ path('pumukitnewadmin_event_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'user':
            route = '{{ path('pumukitnewadmin_user_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'tag':
            route = '{{ path('pumukitnewadmin_tag_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'role':
            route = '{{ path('pumukitnewadmin_role_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
        case 'group':
            route = '{{ path('pumukitnewadmin_group_batch_delete', {'ids': '__ids__'})|raw }}';
            break;
    }

    return route.replace('__ids__', JSON.stringify(ids)) ;
}

window.fileServerSelect = function(element, path)
{
    $(element).siblings(".active").removeClass("active").end().addClass("active");
    $('#file').val(path);
}


window.fileServerTree = function(element, type, dir, num, input)
{
    baseelement = $(element);
    if (baseelement.hasClass('collapsed')) {
        baseelement.removeClass("collapsed").addClass("expanded");
        if (baseelement.hasClass('noload')) {
            $.get('{{ path('pumukit_newadmin_inbox_dir')|raw }}?type=' + type + '&dir=' + encodeURIComponent(dir), function(files){
                links = "";
                for(var i in files) {
                  var file = files[i];
                  if (file.is_file) {
                    links += '<a data-hash="' + file.hash + '" data-path="' + baseelement.data('path') + ' ' + file.hash + ' " ' +
                           ' class="list-group-item elem ' + baseelement.data('path') + ' p_' + baseelement.data('hash') + '" onclick="fileServerSelect(this, \'' + file.path +
                           '\'); return false;" href="#"><span style="padding-left: ' + (10 *num)  + 'px"><i class="mdi- tag_icon"></i></span><span title="' +
                           file.relativepath + '">' +
                           ((file.relativepath.length > 50) ? (file.relativepath.slice(0, 35) + '...' + file.relativepath.slice(-15)) : (file.relativepath)) +
                           ((file.content) ? ' [' + (file.content) + ' video(s)]' : '') +
                           '</span></a>';
                  } else {
                    links += '<a data-hash="' + file.hash + '" data-path="' + baseelement.data('path') + ' ' + file.hash + ' " ' +
                           ' class="list-group-item collapsed noload ' + baseelement.data('path') + ' p_' + baseelement.data('hash') + '" onclick="fileServerTree(this, \'' + type + '\', \'' + file.path +
                           '\', ' + (num + 1) + ', \'' + input + '\'); return false;" href="#"><span style="padding-left: ' + (10 *num)  + 'px"><i class="mdi- tag_icon"></i></span><span title="' +
                           file.relativepath + '">' +
                           ((file.relativepath.length > 50) ? (file.relativepath.slice(0, 35) + '...' + file.relativepath.slice(-15)) : (file.relativepath)) +
                           ((file.content) ? ' [' + (file.content) + ' video(s)]' : '') +
                           '</span></a>';
                    if(type == 'dir') {
                        links += '<a style="color:blue; text-decoration: underline" class="list-group-item element ' + baseelement.data('path') + ' p_' + baseelement.data('hash') + '" href="#" onclick="fileServerSelect(this, \'' + file.path + '\');">' +
                                 '<span style="padding-left: ' + (10 *num)  + 'px"><i class="mdi- tag_icon"></i></span>' +
                                 '{% trans %}This directory{% endtrans %}' +
                                 '</a>';
                    }
                  }
                }
                baseelement.after(links);
                baseelement.removeClass('noload')
            }, 'json').fail(function(e){
                var error = e.responseJSON.error;
                no_success(error.message + ": (" + error.exception[0].message + ")")

            });
        } else {
            //show loaded
            $(".p_" + baseelement.data('hash')).show();
            baseelement.addClass("expanded").removeClass("collapsed");
        }
    } else {
        //hide
        $("." + baseelement.data('hash')).hide().addClass("collapsed").removeClass("expanded");
        baseelement.addClass("collapsed").removeClass("expanded");
    }

}


// TAG SECTION //

function load_children_tag(id, cod) {
  $(".c_" + cod).remove();
  var tr = $('#row_tag_' +id);
  var level = tr.data('level');
  var url = '{{ path('pumukitnewadmin_tag_children', {'id': '___id___'}) }}';
  $.ajax(url.replace('___id___', id) , {
    type: 'GET',
    success: function(response) {
      var t = tr.closest('tbody');
      var ss = t.children();
      tr.after(response);
      if ($('.d_' + cod).length != 0) {
        $('#row_tag_' + id + ' .collapsed').addClass("expanded").removeClass("collapsed");
      }
    }
  });

}

function toggle_section_tag(id, element, level, cod) {

  if(element.parentElement.classList.contains("expanded")){
    $(".c_" + cod).hide();
    $(".c_" + cod + " .expanded").removeClass("expanded").addClass("collapsed");
  }else{
    if(element.parentElement.classList.contains("noload")) {
      element.parentElement.classList.remove("noload");
      load_children_tag(id, cod);
    }else {
      $(".d_" + cod).show();
    }
  }
  element.parentElement.classList.toggle("collapsed");
  element.parentElement.classList.toggle("expanded");
}


function tag_delete(id, cod, pid, numberMultimediaObjects) {
  if (0 < numberMultimediaObjects) {
    window.alert('{% trans %}Can not delete tag with code{% endtrans %} ' + cod + '. ' + numberMultimediaObjects + ' {% trans %}Multimedia Object(s) has/have this tag{% endtrans %}.');
  } else  if (window.confirm('{% trans %}Are you sure you want to delete the tag with code{% endtrans %} ' + cod + '?')) {
    var url = '{{ path('pumukitnewadmin_tag_delete', {'id': '___id___'}) }}';
    $.ajax(url.replace('___id___', id), {
      type: 'DELETE',
      data:  {'_method': 'DELETE'},
      error: function() {
        window.alert('{% trans %}Tags with children can not be deleted.{% endtrans %}')
      },
      success: function(response) {
        $('#row_tag_' +id).remove();
        if ($('.d_' + pid).length == 0) {
          $('#row_tag_' + pid + ' .expanded').removeClass("expanded").addClass("element");
        }
        var message = '{% trans %}Tag{% endtrans %} "'+cod+'" {% trans %}successfully deleted{% endtrans %}.';
        success(message);
      }
    });
  }
  return false;
}

// END OF TAG SECTION //

$(document).ready(function(){
    $(document).on('click', '#pumukitnewadmin_group_delete_all_relation_user', function(event) {
        if (window.confirm('{% trans %}ATTENTION: Are you sure you want to delete all User from this Group?{% endtrans %}')) {
            var route = "{{ path('pumukitnewadmin_group_delete_all_users', {'id': '__groupId__'})|raw }}";
            var group_id = $('#pumukitnewadmin_group_id').val();
            route = route.replace('__groupId__', group_id);
            $.ajax({
                    url: route,
                    type: 'POST',
                    data: {'_method': 'DELETE'},
                    error: function(jqXHR, textStatus, errorThrown) {
                    no_success(errorThrown + ': ' + jqXHR.responseText);
                },
                success: function (response, textStatus, jqXHR) {
                    $('#pumukitnewadmin_group_added_users').html(response);
                    $('#pumukitnewadmin_group_delete_all_relation_user').attr('disabled', 'disabled');
                    var message = 'Successfully delete User from Group.';
                    success(message);
                }
            }).done(function() {can_be_deleted(group_id);});
        }
        event.preventDefault();
        event.stopPropagation();
        return false;
    });

    $(document).on('click', '#pumukitnewadmin_group_delete_all_relation_multimediaobject', function(event) {
        if (window.confirm('{% trans %}ATTENTION: Are you sure you want to delete all Admin Multimedia Objects from this Group?{% endtrans %}')) {
            var route = "{{ path('pumukitnewadmin_group_delete_all_multimediaobjects', {'id': '__groupId__'})|raw }}";
            var group_id = $('#pumukitnewadmin_group_id').val();
            route = route.replace('__groupId__', group_id);
            $.ajax({
                    url: route,
                    type: 'POST',
                    data: {'_method': 'DELETE'},
                    error: function(jqXHR, textStatus, errorThrown) {
                    no_success(errorThrown + ': ' + jqXHR.responseText);
                },
                success: function (response, textStatus, jqXHR) {
                    $('#pumukitnewadmin_group_added_multimediaobjects').html(response);
                    $('#pumukitnewadmin_group_delete_all_relation_multimediaobject').attr('disabled', 'disabled');
                    var message = 'Successfully delete admin MultimediaObjects from Group.';
                    success(message);
                }
            }).done(function() {can_be_deleted(group_id);});
        }
        event.preventDefault();
        event.stopPropagation();
        return false;
    });

    $(document).on('click', '#pumukitnewadmin_group_delete_all_relation_embeddedbroadcast', function(event) {
        if (window.confirm('{% trans %}ATTENTION: Are you sure you want to delete all Play Multimedia Objects from this Group?{% endtrans %}')) {
            var route = "{{ path('pumukitnewadmin_group_delete_all_embeddedbroadcasts', {'id': '__groupId__'})|raw }}";
            var group_id = $('#pumukitnewadmin_group_id').val();
            route = route.replace('__groupId__', group_id);
            $.ajax({
                    url: route,
                    type: 'POST',
                    data: {'_method': 'DELETE'},
                    error: function(jqXHR, textStatus, errorThrown) {
                    no_success(errorThrown + ': ' + jqXHR.responseText);
                },
                success: function (response, textStatus, jqXHR) {
                    $('#pumukitnewadmin_group_added_embeddedbroadcasts').html(response);
                    $('#pumukitnewadmin_group_delete_all_relation_embeddedbroadcast').attr('disabled', 'disabled');
                    var message = 'Successfully delete play MultimediaObjects from Group.';
                    success(message);
                }
            }).done(function() {can_be_deleted(group_id);});
        }
        event.preventDefault();
        event.stopPropagation();
        return false;
    });

    $('#myModal')
    .on('shown.bs.modal', function () {
        $('#iframeUpload').on("load", function(){
            var message = $('#iframeUpload').contents().find('title');
            if (message.length != 0) message = message[0].innerHTML;
            message = $.trim(message);
            message = message.replace(/(\r\n|\n|\r)/gm,"");
            if ('4' == message.charAt(0)){
                $('#myModal').modal('hide');
                no_success('NGINX ERROR: '+message);
            }
        });
    })
    .on('show.bs.modal', function() {
        $('.modal-content').html('');
    });
});

function check_pass(pass1, pass2) {
    var submit_button = get_submit_button_id();
    if ((pass1 == '') || (pass2 == '')){
        $('#broadcast_password_check_fail').hide();
        $('#broadcast_password_check_empty').show();
        $(submit_button).prop('disabled', true);
        return false;
    } else if (pass1 == pass2) {
        $('#broadcast_password_check_fail').hide();
        $('#broadcast_password_check_empty').hide();
        $(submit_button).prop('disabled', false);
        return true;
    } else {
        $('#broadcast_password_check_empty').hide();
        $('#broadcast_password_check_fail').show();
        $(submit_button).prop('disabled', true);
        return false;
    }
}

function generate_random_password(pass1_id, pass2_id) {
    var password = '';
    var randomchar = '';
    var numberofdigits = Math.floor((Math.random() * 7) + 6 );
    $('#broadcast_password_check_fail').hide();
    for (var count=1; count<=numberofdigits; count++) {
        var chargroup = Math.floor((Math.random() * 3) + 1 );
        if ( chargroup == 1 ) {
            randomchar = Math.floor((Math.random() * 26) + 65);
        }
        if ( chargroup == 2 ) {
            randomchar = Math.floor((Math.random() * 26) + 65);
        }
        if ( chargroup == 3 ) {
            randomchar = Math.floor((Math.random() * 26) + 65);
        }
        password+=String.fromCharCode(randomchar);
    }
    $('#broadcast_password_check_fail').hide();
    $('#broadcast_password_check_empty').hide();
    $('#'+pass1_id).val(password);
    $('#'+pass2_id).val(password);
    can_enable_broadcast_password_save_button();
}

$(document).on('submit', '#pumukitnewadmin_event_create_form', function() {
    $(this).find(':submit').prop('disabled', true);
    $('#myModal').modal('hide');
    $.ajax({
            url: "{{ path('pumukitnewadmin_event_create')|raw }}",
            method: 'POST',
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR){
                if (jqXHR.responseText.indexOf('modal-header') != -1){
                    var message = '{% trans %}There was an error in creating the Live event.{% endtrans %}';
                    no_success(message);
                }else{
                    var eventId = response['eventId'];
                    var routeList = "{{ path('pumukitnewadmin_event_list', {'newEventId': '__eventId__'})|raw }}";
                    $('#list_events').load(routeList.replace('__eventId__', eventId), {'_method':'POST'}, function(){
                        var routeShow = "{{ path('pumukitnewadmin_event_show', {'id': '__eventId__'})|raw }}";
                        $('#preview_event').load(routeShow.replace('__eventId__', eventId));
                    });
                    var message = '{% trans %}Live event successfully created.{% endtrans %}';
                    success(message);
                }
            },
            error: function(jqXHR, textStatus, errorThrown){
                no_success(errorThrown+': '+textStatus);
            }
    });
    return false;
});

$(document).on('submit', '#pumukitnewadmin_live_create_form', function() {
    $(this).find(':submit').prop('disabled', true);
    $('#myModal').modal('hide');
    $.ajax({
            url: "{{ path('pumukitnewadmin_live_create')|raw }}",
            method: 'POST',
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR){
                if (jqXHR.responseText.indexOf('modal-header') != -1){
                    var message = '{% trans %}There was an error in creating the Live channel.{% endtrans %}';
                    no_success(message);
                }else{
                    var liveId = response['liveId'];
                    var routeList = "{{ path('pumukitnewadmin_live_list', {'newLiveId': '__liveId__'})|raw }}";
                    $('#list_lives').load(routeList.replace('__liveId__', liveId), {'_method':'POST'}, function(){
                        var routeShow = "{{ path('pumukitnewadmin_live_show', {'id': '__liveId__'})|raw }}";
                        $('#preview_live').load(routeShow.replace('__liveId__', liveId));
                    });
                    var message = '{% trans %}Live channel successfully created.{% endtrans %}';
                    success(message);
                }
            },
            error: function(jqXHR, textStatus, errorThrown){
                no_success(errorThrown+': '+textStatus);
            }
    });
    return false;
});

$(document).on('submit', '#pumukitnewadmin_seriestype_create_form', function() {
    $(this).find(':submit').prop('disabled', true);
    $('#myModal').modal('hide');
    $.ajax({
            url: "{{ path('pumukitnewadmin_seriestype_create')|raw }}",
            method: 'POST',
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR){
                if (jqXHR.responseText.indexOf('modal-header') != -1){
                    var message = '{% trans %}There was an error in creating the Live channel.{% endtrans %}';
                    no_success(message);
                }else{
                    $('#list_seriestypes').html(response);
                    var message = '{% trans %}Series type channel successfully created.{% endtrans %}';
                    success(message);
                }
            },
            error: function(jqXHR, textStatus, errorThrown){
                no_success(errorThrown+': '+textStatus);
            }
    });
    return false;
});

function checkRecordDateAndPublicDate(recordDate, publicDate) {
    if (publicDate.getTime() < recordDate.getTime()){
        var message = '{% trans %}Multimedia Object saved ERROR: Publication Date can not be lower than Recording Date.{% endtrans %}';
        no_success(message);
        return false;
    }
}

$(document).on('submit', '#pumukitnewadmin_mms_updatemeta_form', function(event){
    $('#remember_save_mm').hide();

    var publicDateVal = $('#pumukitnewadmin_mms_meta_public_date').val();
    var recordDateVal = $('#pumukitnewadmin_mms_meta_record_date').val();

    var publicDate = new Date(publicDateVal);
    var recordDate = new Date(recordDateVal);

    checkRecordDateAndPublicDate(recordDate, publicDate);

    var route = '{{ path('pumukitnewadmin_mms_update_meta', {'id': '__mmId__'}) }}';
    var mmId = $('#mm_id_meta').val();

    route = route.replace('__mmId__', mmId);

    var showRoute = '{{ path('pumukitnewadmin_mms_show', {'id': '__mmId__'}) }}';
    showRoute = showRoute.replace('__mmId__', mmId);

    $.ajax({
            url: route,
            type: 'POST',
            data: $(this).serialize(),
            error: function(request, json){var message = '{% trans %}Multimedia Object saved ERROR{% endtrans %}'; no_success(message);},
            success: function(response){
                                        $('#list_mms').html(response);
                                        $('#preview_mm').load(showRoute);
                                        $('#inputMMTitle').val($('#pumukitnewadmin_mms_meta_i18n_title_{{ app.request.getLocale() }}').val());
                                        var message = '{% trans %}Multimedia Object saved OK{% endtrans %}';
                                        success(message);
                                        }
            });

    return false;
});

$(document).on('change', "*[id^='pumukitnewadmin_series_']", function(e){
    if ('checkbox' == e.target.type || e.target.value != e.target.defaultValue) {
        $('#remember_save_series').css('display', 'inline-block');
    }
});

$(document).on('change', "*[id^='pumukitnewadmin_mms_meta_']", function(e){
    if ('checkbox' == e.target.type || e.target.value != e.target.defaultValue) {
        $('#remember_save_mm').css('display', 'inline-block');
    }
});

$(document).on('change', 'form#pumukitnewadmin_mms_updatepub_form input, form#pumukitnewadmin_mms_updatepub_form select', function(){
    $('#remember_save_mm_pub').show();
});

$(document).on('click', '#pumukitnewadmin_series_updatemeta_cancel', function(){
    $('#pumukitnewadmin_series_updatemeta_form')[0].reset();
    $('input.series.materialtags').materialtags('destroy');
    window.init_series_materialtags();
    $('#remember_save_series').hide();
});

$(document).on('click', '#pumukitnewadmin_mms_updatepub_cancel', function(){
    $('#pumukitnewadmin_mms_updatepub_form')[0].reset();
    return procesaReset();
});

$(document).on('click', '#pumukitnewadmin_mms_updatemeta_cancel', function(){
    $('#pumukitnewadmin_mms_updatemeta_form')[0].reset();
    $('input.mmobj.materialtags').materialtags('destroy');
    window.init_mmobj_materialtags();
    $('#remember_save_mm').hide();
});

$(document).on('click', '#pumukitnewadmin_mmtemplate_updatemeta_cancel', function(){
    $('#pumukitnewadmin_mmtemplate_updatemeta_form')[0].reset();
    $('input.mmobj.materialtags').materialtags('destroy');
    window.init_mmobj_materialtags();
    $('#remember_save_mm_template').hide();
});

$(document).on('submit', '#pumukitnewadmin_user_form_update', function(event){
    $('#myModal').modal('hide');

    var route = '{{ path('pumukitnewadmin_user_update', {'id': '__userId__'}) }}';
    var userId = $('#userId').val();

    route = route.replace('__userId__', userId);

    $.ajax({
            url: route,
            method: 'POST',
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR){
                        if (jqXHR.responseText.indexOf('modal-header') != -1){
                            var message = '{% trans %}There was an error in updating the User.{% endtrans %}';
                            no_success(message);
                        }else{
                            $('#list_users').html(response);
                            var message = '{% trans %}User successfully updated.{% endtrans %}';
                            success(message);
                        }
            },
            error: function(jqXHR, textStatus, errorThrown){
                        var responseText = jqXHR.responseText.split("<title>").pop().split("</title>").shift();
                        var message = responseText.replace(/(\r\n|\n|\r)/gm,"");
                        no_success(errorThrown+': '+textStatus+', '+message);
            }
    });
    return false;
});

$(document).on('submit', '#pumukitnewadmin_user_form_create', function(event){
    $(event.currentTarget).find(':submit').prop('disabled', true);
    $('#myModal').modal('hide');

    var route = '{{ path('pumukitnewadmin_user_create') }}';
    $.ajax({
            url: route,
            method: 'POST',
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR){
                        if (jqXHR.responseText.indexOf('modal-header') != -1){
                            var message = '{% trans %}There was an error in creating the User.{% endtrans %}';
                            no_success(message);
                        }else{
                            $('#list_users').html(response);
                            var message = '{% trans %}User successfully created.{% endtrans %}';
                            success(message);
                        }
            },
            error: function(jqXHR, textStatus, errorThrown){
                        var responseText = jqXHR.responseText.split("<title>").pop().split("</title>").shift();
                        var message = responseText.replace(/(\r\n|\n|\r)/gm,"");
                        no_success(errorThrown+': '+textStatus+', '+message);
            }
    });
    return false;
});

$(document).on('submit', '#pumukitnewadmin_permissionprofile_form_create', function(event){
    $(event.currentTarget).find(':submit').prop('disabled', true);
    $('#myModal').modal('hide');

    var route = '{{ path('pumukitnewadmin_permissionprofile_create') }}';
    $.ajax({
            url: route,
            method: 'POST',
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR){
                        if (jqXHR.responseText.indexOf('modal-header') != -1){
                            var message = '{% trans %}There was an error in creating the Permission Profile.{% endtrans %}';
                            no_success(message);
                        }else{
                            $('#list_permissionprofiles').html(response);
                            $('[data-toggle="tooltip"]').tooltip()
                            var message = '{% trans %}Permission Profile successfully created.{% endtrans %}';
                            success(message);
                        }
            },
            error: function(jqXHR, textStatus, errorThrown){
                        var responseText = jqXHR.responseText.split("<title>").pop().split("</title>").shift();
                        var message = responseText.replace(/(\r\n|\n|\r)/gm,"");
                        no_success(errorThrown+': '+textStatus+', '+message);
            }
    });
    return false;
});

$(document).on('submit', '#pumukitnewadmin_permissionprofile_form_update', function(event){
    $('#myModal').modal('hide');

    var route = '{{ path('pumukitnewadmin_permissionprofile_update', {'id': '__permissionProfileId__'}) }}';
    var permissionProfileId = $('#permissionProfileId').val();

    route = route.replace('__permissionProfileId__', permissionProfileId);

    $.ajax({
            url: route,
            method: 'POST',
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR){
                        if (jqXHR.responseText.indexOf('modal-header') != -1){
                            var message = '{% trans %}There was an error in updating the Permission Profile.{% endtrans %}';
                            no_success(message);
                        }else{
                            $('#list_permissionprofiles').html(response);
                            $('[data-toggle="tooltip"]').tooltip();
                            var message = '{% trans %}Permission Profile successfully updated.{% endtrans %}';
                            success(message);
                        }
            },
            error: function(jqXHR, textStatus, errorThrown){
                        var responseText = jqXHR.responseText.split("<title>").pop().split("</title>").shift();
                        var message = responseText.replace(/(\r\n|\n|\r)/gm,"");
                        no_success(errorThrown+': '+textStatus+', '+message);
            }
    });
    return false;
});

$(document).on('change', 'form#pumukitnewadmin_permissionprofile_table_form', function(){
    $('#remember_save_permissionprofile').show();
});

$(document).on('click', '#pumukitnewadmin_permissionprofile_update_cancel', function(){
    $('#pumukitnewadmin_permissionprofile_table_form')[0].reset();
    $('#remember_save_permissionprofile').hide();
});

processPermissionProfilesOk = function(){
    $('#remember_save_permissionprofile').hide();
    var selected_default = '';
    $('input.pumukitnewadmin_permissionprofile_default:checked').each(function(){
            var $this = $(this);
            selected_default = $this.attr("value");
    });
    var selected_scopes = [];
    $('select.permissionprofile_scope:not([disabled]) option:selected').each(function(){
            var $this = $(this);
            selected_scopes.push($this.attr("value"));
    });
    var checked_permissions = [];
    $('.permission_permissionprofile_checkbox:checked:not([disabled])').each(function(){
            var $this = $(this);
            checked_permissions.push($this.attr("id"));
    });

    var message = '{% trans %}Permission Profiles successfully updated.{% endtrans %}';
    var route = '{{ path('pumukitnewadmin_permissionprofile_batch_update')|raw }}';
    $.ajax({
            url: route,
            type: 'POST',
            data: {'selected_default': selected_default, 'selected_scopes': JSON.stringify(selected_scopes), 'checked_permissions': JSON.stringify(checked_permissions)},
            error: function(jqXHR, textStatus, errorThrown){
                no_success(errorThrown + ': ' + jqXHR.responseText);
            },
            success: function(response){
                $('#list_permissionprofiles').html(response);
                $('[data-toggle="tooltip"]').tooltip();
                success(message);
            }
    });

    return false;
}

$(document).on('click', '.permission_permissionprofile_checkbox:not([disabled])', function(event){
    var element = event.target;
    var checkedElement = element.checked;
    var elementId = element.id.split('__')[1];
    var selectedScope = $('select#pumukitnewadmin_permissionprofile_scope_' + elementId + ' option:selected');
    var scope = selectedScope.attr("value");
    if (checkedElement) {
        var dependencies = get_permission_dependencies(element, scope);
        var dependenciesLength = dependencies.length;
        for (var i = 0; i < dependenciesLength; i++) {
            $("#"+dependencies[i]).prop("checked", "checked");
        }
    } else {
        delete_dependent_permissions(elementId, scope, element.id);
        fix_permission_dependencies(elementId, scope);
    }
});

function get_permission_dependencies(element, scope) {
    if (scope.indexOf('GLOBAL') > -1) {
        var rawDependencies = element.getAttribute('data-dependencies-global');
    } else {
        var rawDependencies = element.getAttribute('data-dependencies-personal');
    }
    return rawDependencies.split(' ');
}

function delete_dependent_permissions(elementId, scope, fullPermission){
    var permissionProfileId = '__' + elementId + '__permission';
    var elementsToDelete = [];
    var elementsDescriptionToDelete = "";
    $("[id^='ROLE_'][id$="+permissionProfileId+"]:checked").each(function (i, element) {
        var dependencies = get_permission_dependencies(element, scope);
        var dependenciesLength = dependencies.length;
        for (var i = 0; i < dependenciesLength; i++) {
            if (dependencies[i] == fullPermission) {
                elementsToDelete.push(element.id);
                var permission = element.id.split("__")[0];
                var fullDescription = $("#"+permission).html().replace(/^\s\s*/, '').replace(/\s\s*$/, '');
                var description = fullDescription.split(' <i')[0];
                elementsDescriptionToDelete += '"' + description + '", ';
                break;
            }
        }
    });
    if (elementsDescriptionToDelete.slice(-2) == ', ') {
        elementsDescriptionToDelete = elementsDescriptionToDelete.slice(0, -2);
    }
    var elementsToDeleteLength = elementsToDelete.length;
    if (elementsToDeleteLength > 0) {
        var permissionToDelete = fullPermission.split("__")[0];
        var permissionFullDescription = $("#"+permissionToDelete).html().replace(/^\s\s*/, '').replace(/\s\s*$/, '');
        var permissionDescription = '"' + permissionFullDescription.split(' <i')[0] + '"';
        if (window.confirm("{% trans %}The permission{% endtrans %} " + permissionDescription + " {% trans %}is dependent of the permission(s){% endtrans %}: " + elementsDescriptionToDelete + ". {% trans %}If you click OK you will uncheck all these permissions. Are you sure?{% endtrans %}")) {
            for (var i = 0; i < elementsToDeleteLength; i++) {
                $("#"+elementsToDelete[i]).prop("checked", "");
            }
        }
    }
}

function fix_permission_dependencies(elementId, scope){
    var permissionProfileId = '__' + elementId + '__permission';
    $("[id^='ROLE_'][id$="+permissionProfileId+"]:checked").each(function (i, element) {
        var dependencies = get_permission_dependencies(element, scope);
        var dependenciesLength = dependencies.length;
        for (var i = 0; i < dependenciesLength; i++) {
            if (!$("#"+dependencies[i]).prop("checked")) {
                $("#"+dependencies[i]).prop("checked", "checked");
            }
        }
    });
}

function fix_permission_scope_none(elementId){
    var permissionProfileId = '__' + elementId + '__permission';
    $("[id^='ROLE_'][id$="+permissionProfileId+"]:checked").each(function (i, element) {
        $("#"+element.id).prop("checked", "");
    });
}


function test_material_form_url(url){
    $('.error').hide();

    if (test_url_generation(url)){
        $('#error_url').show();
        return false;
    }
    $('#myModal').modal('hide');
    return true;
}

function test_material_form_file_nmb(file){
    $('.error').hide();
    if (file == ""){
        $('#error_file').show();
        return false;
    }

    return true;
}

$(document).on('click', '#pumukitnewadmin_track_ok_button', function(event){
    if ($('#radio_file').prop('checked')){
        var file = $('#resource').val();
    }else{
        var file = $('#file').val();
    }
    var valid = test_material_form_file_nmb(file);
    if (valid){
        $('#file_upload_progress').show();
        return true;
    }else{
        return false;
    }
});

window.change_pics_page = function(route)
{
    $('#pics_to_add_list').load(route);
}

function checkScope(id)
{
    var scope_id = $('#pumukitnewadmin_permissionprofile_scope_'+id+' option:selected').val();
    var values = scope_id.split('__');
    var permissions = $("input[id$=__"+id+"__permission]");
    var scope = values[0];
    for (var i = 0; i < permissions.length; i++){
       if (scope == 'ROLE_SCOPE_NONE') {
           if ($(permissions[i]).attr("disabled") != "disabled") {
               $(permissions[i]).attr("disabled", "disabled");
           }
           if ($(permissions[i]).attr("checked") == "checked") {
               $(permissions[i]).removeAttr("checked");
           }
           if ($(permissions[i]).closest("div").attr("class") != "checkbox pmk_disabled_checkbox") {
               $(permissions[i]).closest("div").attr("class", "checkbox pmk_disabled_checkbox");
           }
           fix_permission_scope_none(id);
       } else {
           if ($(permissions[i]).attr("disabled") == "disabled") {
               $(permissions[i]).removeAttr("disabled");
           }
           if ($(permissions[i]).closest("div").attr("class") == "checkbox pmk_disabled_checkbox") {
               $(permissions[i]).closest("div").attr("class", "checkbox");
           }
           fix_permission_dependencies(id, scope_id);
       }
    }
}


function select_group(element)
{
  $(element).siblings(".active").removeClass("active").end().addClass("active");
  return false;
}

function add_group_user(group_id, group_key, group_name, group_origin, user_origin, reset) {

    create_element_group_in_add_groups_user(group_id, group_key, group_name, group_origin, user_origin);
    var element_to_delete = "#delete_group_" + group_id;

    delete_element_group_from_select(element_to_delete);
}

function create_element_group_in_add_groups_user(group_id, group_key, group_name, group_origin, user_origin) {

    var item_id = 'id="add_group_' + group_id;
    var add_groups_list = $('#add_groups');

    var local_origin = '{{ constant('Pumukit\\SchemaBundle\\Document\\Group::ORIGIN_LOCAL')}}';
    if ((group_origin == local_origin) || ((group_origin != local_origin) && user_origin == local_origin)) {
        var item_class = 'class="list-group-item add-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
        var item_onclick = 'onclick="return select_group(this);"';
        var item_ondblclick = 'ondblclick="delete_group_user(\''+group_id+'\', \''+group_key+'\', \''+group_name+'\', \''+group_origin+'\', \''+user_origin+'\');"';
    } else {
        var item_class = 'class="list-group-item disabled-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
        var item_onclick = 'onclick="return false;"';
        var item_ondblclick = 'ondblclick="window.alert(\'External defined groups. Contact your directory service administrator to change membership.\');"';
    }

    var item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> ' + group_name + '</a>';
    {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::SHOW_CODES')) %}
        item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> '+group_key+' - '+group_name+' - ('+group_origin+')</a>';
    {% endif %}
    add_groups_list.append(item_text);
}

function delete_group_user(group_id, group_key, group_name, group_origin, user_origin, reset) {

    create_element_group_in_delete_groups_user(group_id, group_key, group_name, group_origin, user_origin);

    var element_to_delete = "#add_group_" + group_id;
    delete_element_group_from_select(element_to_delete);
}

function create_element_group_in_delete_groups_user(group_id, group_key, group_name, group_origin, user_origin) {

    var local_origin = '{{ constant('Pumukit\\SchemaBundle\\Document\\Group::ORIGIN_LOCAL')}}';
    var item_id = 'id="delete_group_' + group_id;
    var delete_groups_list = $('#delete_groups');

    if ((group_origin == local_origin) || ((group_origin != local_origin) && user_origin == local_origin)) {
        var item_class = 'class="list-group-item delete-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
        var item_onclick = 'onclick="return select_group(this);"';
        var item_ondblclick = 'ondblclick="add_group_user(\'' + group_id + '\', \'' + group_key + '\', \'' + group_name + '\', \'' + group_origin + '\', \'' + user_origin + '\');"';
    } else {
        var item_class = 'class="list-group-item disabled-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
        var item_onclick = 'onclick="return false;"';
        var item_ondblclick = 'ondblclick="window.alert(\'External defined groups. Contact your directory service administrator to change membership.\');"';
    }

    var item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> ' + group_name + '</a>';
    {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::SHOW_CODES')) %}
        var item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> '+group_key+' - '+group_name+' - ('+group_origin+')</a>';
    {% endif %}
    delete_groups_list.append(item_text);
}


function add_group(group_id, group_key, group_name, group_origin, resource, reset)
{
    reset = typeof reset !== 'undefined' ? reset : false;

    create_element_group_in_add_groups(group_id, group_key, group_name, group_origin, resource);
    if (resource == "user") {
        element_to_delete = "#delete_group_" + group_id;
    } else {
        element_to_delete = "#delete_" + resource + "_group_" + group_id;
    }
    delete_element_group_from_select(element_to_delete, group_id, group_key, group_name, group_origin, resource);
    if (resource != "user") {
        can_enable_broadcast_groups_save_button();
    }
    if ((!reset) && (resource != "user") && (resource != "series")) {
        is_last_user_relation_to_admin_mm(resource, null);
    } else if (resource != "user") {
        $('#remember_save_' + resource + '_group').show();
    }
}

function delete_group(group_id, group_key, group_name, group_origin, resource, reset)
{
    reset = typeof reset !== 'undefined' ? reset : false;

    if (resource == "user") {
        element_to_delete = "#add_group_" + group_id;
    } else {
        element_to_delete = "#add_" + resource + "_group_" + group_id;
    }
    delete_element_group_from_select(element_to_delete);
    create_element_group_in_delete_groups(group_id, group_key, group_name, group_origin, resource);
    if (resource != "user") {
        can_enable_broadcast_groups_save_button();
    }
    if ((!reset) && (resource != "user") && (resource != "series")) {
        is_last_user_relation_to_admin_mm(resource, null);
    } else if (resource != "user") {
        $('#remember_save_' + resource + '_group').show();
    }
}

function create_element_group_in_add_groups(group_id, group_key, group_name, group_origin, resource) {
    var can_modify_groups = $('#can_modify_groups').val();
    if (resource == "user") {
        var item_id = 'id="add_group_' + group_id;
        var $add_groups_list = $('#add_groups');
    } else {
        var item_id = 'id="add_' + resource + '_group_' + group_id;
        var $add_groups_list = $('#add_' + resource + '_groups');
    }
    var local_origin = '{{ constant('Pumukit\\SchemaBundle\\Document\\Group::ORIGIN_LOCAL')}}';
    if ((group_origin == local_origin) || (resource != "user")){
        if (resource == "user") {
            var item_class = 'class="list-group-item add-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
        } else {
            var item_class = 'class="list-group-item add-' + resource + '-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
        }
        if ((can_modify_groups == 'no') && ((resource == 'mm') || (resource == 'mm_template'))){
            var item_onclick = 'onclick="return false;"';
            var item_ondblclick = 'ondblclick="window.alert(\'{% trans %}WARNING: You do not have enough permissions to modify admin groups.{% endtrans %}\');return false;"';
        } else {
            var item_onclick = 'onclick="return select_group(this);"';
            var item_ondblclick = 'ondblclick="javascript:delete_group(\''+group_id+'\', \''+group_key+'\', \''+group_name+'\', \''+group_origin+'\', \''+resource+'\');"';
        }
    } else {
        var item_class = 'class="list-group-item disabled-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
        var item_onclick = 'onclick="return false;"';
        var item_ondblclick = 'ondblclick="javascript:window.alert(\'External defined groups. Contact your directory service administrator to change membership.\');"';
        group_origin = group_origin.toUpperCase();
    }
    {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::SHOW_CODES')) %}
    var item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> '+group_key+' - '+group_name+' - ('+group_origin+')</a>';
    {% else %}
    var item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> ' + group_name + '</a>';
    {% endif %}
    $add_groups_list.append(item_text);
}

function create_element_group_in_delete_groups(group_id, group_key, group_name, group_origin, resource) {
    var local_origin = '{{ constant('Pumukit\\SchemaBundle\\Document\\Group::ORIGIN_LOCAL')}}';
    var can_modify_groups = $('#can_modify_groups').val();
    if ((group_origin == local_origin) || (resource != "user")){
        if (resource == "user") {
            var item_id = 'id="delete_group_' + group_id;
            var item_class = 'class="list-group-item delete-group-item pumukitnewadmin-trim-row group_' + group_key +'"';
            var $delete_groups_list = $('#delete_groups');
        } else {
            var item_id = 'id="delete_' + resource + '_group_' + group_id;
            var item_class = 'class="list-group-item delete-' + resource + '-group-item pumukitnewadmin-trim-row  group_' + group_key +'"';
            var $delete_groups_list = $('#delete_' + resource + '_groups');
        }
        if ((can_modify_groups == 'no') && ((resource == 'mm') || (resource == 'mm_template'))){
            var item_onclick = 'onclick="return false;"';
            var item_ondblclick = 'ondblclick="window.alert(\'{% trans %}WARNING: You do not have enough permissions to modify admin groups.{% endtrans %}\');return false;"';
        } else {
            var item_onclick = 'onclick="return select_group(this);"';
            var item_ondblclick = 'ondblclick="javascript:add_group(\''+group_id+'\', \''+group_key+'\', \''+group_name+'\', \''+group_origin+'\', \''+resource+'\');"';
        }
        {% if app.user and is_granted(constant('Pumukit\\SchemaBundle\\Security\\Permission::SHOW_CODES')) %}
            var item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> '+group_key+' - '+group_name+' - ('+group_origin+')</a>';
        {% else %}
            var item_text = '<a href="#" '+item_class+' '+item_onclick+' '+item_ondblclick+' '+item_id+'"><i class="mdi-social-group"></i> ' + group_name + '</a>';
        {% endif %}
        $delete_groups_list.append(item_text);
    }
}

function delete_element_group_from_select(element_id) {
    var $_element = $(element_id);
    if ($_element) $_element.remove();
}

$(document).on('click', '#pumukitnewadmin_user_groups_submit', function() {
    $('#myModal').modal('hide');
    var user_id = $('#user_id').val();
    var route = "{{ path('pumukitnewadmin_user_updategroups', {'id': '__id__'})|raw }}";
    route = route.replace('__id__', user_id);
    var addGroups = [];
    var deleteGroups = [];
    $('a.add-group-item').each(function(){
        addGroups.push($(this).attr("id"));
    });
    $('a.delete-group-item').each(function(){
        deleteGroups.push($(this).attr("id"));
    });
    $.ajax({
        url: route,
        type: 'POST',
        data: {'addGroups': addGroups, 'deleteGroups': deleteGroups},
        error: function(jqXHR, textStatus, errorThrown){
            no_success(errorThrown + ': ' + jqXHR.responseText);
        },
        success: function(response){
            $('#list_users').html(response);
            var message = '{% trans %}Successfully updated groups in User.{% endtrans %}';
            success(message);
        }
    });
});

$(document).on('click', '#pumukitnewadmin_user_groups_reset', function() {
    var user_id = $('#user_id').val();
    var route = "{{ path('pumukitnewadmin_user_getgroups', {'id': '__id__'})|raw }}";
    route = route.replace('__id__', user_id);
    $.ajax({
        url: route,
        type: 'GET',
        error: function(jqXHR, textStatus, errorThrown){
            no_success(errorThrown + ': ' + jqXHR.responseText);
        },
        success: function(response){
            var addGroups = response.add;
            var deleteGroups = response.delete;
            var userData = response.userOrigin;
            $('#add_groups').empty();
            $('#delete_groups').empty();
            for (var group_id in addGroups) {
                var group_key = addGroups[group_id].key;
                var group_name = addGroups[group_id].name;
                var group_origin = addGroups[group_id].origin;
                add_group_user(group_id, group_key, group_name, group_origin, userData, true);
            }
            for (var group_id in deleteGroups) {
                var group_key = deleteGroups[group_id].key;
                var group_name = deleteGroups[group_id].name;
                var group_origin = deleteGroups[group_id].origin;
                delete_group_user(group_id, group_key, group_name, group_origin, userData, true);
            }
        }
    });
});

function pumukitnewadmin_mm_updategroup_submit(mm_id, template) {
    $('#remember_save_mm' + template + '_group').hide();
    var route = "{{ path('pumukitnewadmin_mms_updategroups', {'id': '__id__'})|raw }}";
    route = route.replace('__id__', mm_id);
    var addGroups = [];
    var deleteGroups = [];
    $('a.add-mm'+template+'-group-item').each(function(){
        addGroups.push($(this).attr("id"));
    });
    $('a.delete-mm'+template+'-group-item').each(function(){
        deleteGroups.push($(this).attr("id"));
    });
    $.ajax({
        url: route,
        type: 'POST',
        data: {'addGroups': addGroups, 'deleteGroups': deleteGroups},
        error: function(jqXHR, textStatus, errorThrown){
            no_success(errorThrown + ': ' + jqXHR.responseText);
        },
        success: function(response){
            if (response.redirect == 1) {
                window.location.href = response.url;
            }
            var message = '{% trans %}Successfully updated groups in Mm.{% endtrans %}';
            success(message);
        }
    });
}

$(document).on('click', '#pumukitnewadmin_mm_updategroup_submit', function() {
    var mm_id = $('#mm_id_ownerrelation').val();
    pumukitnewadmin_mm_updategroup_submit(mm_id, '');
});

$(document).on('click', '#pumukitnewadmin_mm_template_updategroup_submit', function() {
    var mm_id = $('#mm_id_ownerrelation').val();
    pumukitnewadmin_mm_updategroup_submit(mm_id, '_template');
});

function pumukitnewadmin_mm_updategroup_reset(mm_id, template, resource) {
    $('#remember_save_mm' + template + '_group').hide();
    var route = "{{ path('pumukitnewadmin_mms_getgroups', {'id': '__id__'})|raw }}";
    route = route.replace('__id__', mm_id);
    $.ajax({
        url: route,
        type: 'GET',
        error: function(jqXHR, textStatus, errorThrown){
            no_success(errorThrown + ': ' + jqXHR.responseText);
        },
        success: function(response){
            var addGroups = response.addGroups;
            var deleteGroups = response.deleteGroups;
            $('#add_mm'+template+'_groups').empty();
            $('#delete_mm'+template+'_groups').empty();
            for (var group_id in addGroups) {
                var group_key = addGroups[group_id].key;
                var group_name = addGroups[group_id].name;
                var group_origin = addGroups[group_id].origin;
                add_group(group_id, group_key, group_name, group_origin, resource, true);
            }
            for (var group_id in deleteGroups) {
                var group_key = deleteGroups[group_id].key;
                var group_name = deleteGroups[group_id].name;
                var group_origin = deleteGroups[group_id].origin;
                delete_group(group_id, group_key, group_name, group_origin, resource, true);
            }
            $('#remember_save_mm' + template + '_group').hide();
        }
    });
}

$(document).on('click', '#pumukitnewadmin_mm_updategroup_reset', function() {
    var mm_id = $('#mm_id_ownerrelation').val();
    var resource = 'mm';
    pumukitnewadmin_mm_updategroup_reset(mm_id, '', resource);
});

$(document).on('click', '#pumukitnewadmin_mm_template_updategroup_reset', function() {
    var mm_id = $('#mm_id_ownerrelation').val();
    var resource = 'mm_template';
    pumukitnewadmin_mm_updategroup_reset(mm_id, '_template', resource);
});

$(document).on('click', '#pumukitnewadmin_mm_broadcast_updategroup_reset', function() {
    var resource = 'broadcast';
    var route = "{{ path('pumukitnewadmin_mms_broadcast_info', {'id': '__id__'})|raw }}";
    var mm_id = $('#pumukitnewadmin_mms_broadcast_mm_id').val();
    route = route.replace('__id__', mm_id);
    $.ajax({
        url: route,
        type: 'GET',
        error: function(jqXHR, textStatus, errorThrown){
            no_success(errorThrown + ': ' + jqXHR.responseText);
        },
        success: function(response){
            var type = response.type;
            $('input[type=radio][id=pumukitnewadmin_mms_broadcast_type_' + type + ']').prop('checked', 'checked');
            var password = response.password;
            $('#broadcast_password_1').val(password);
            $('#broadcast_password_2').val(password);
            var groups = response.groups;
            var addGroups = groups['addGroups'];
            var deleteGroups = groups['deleteGroups'];
            $('#add_broadcast_groups').empty();
            $('#delete_broadcast_groups').empty();
            for (var group_id in addGroups) {
                var group_key = addGroups[group_id].key;
                var group_name = addGroups[group_id].name;
                var group_origin = addGroups[group_id].origin;
                add_group(group_id, group_key, group_name, group_origin, resource, true);
            }
            for (var group_id in deleteGroups) {
                var group_key = deleteGroups[group_id].key;
                var group_name = deleteGroups[group_id].name;
                var group_origin = deleteGroups[group_id].origin;
                delete_group(group_id, group_key, group_name, group_origin, resource, true);
            }
        }
    });
});

$(document).on('submit', '#pumukitnewadmin_mms_updatebroadcast_submit', function() {
    $('#myModal').modal('hide');
    var route = '{{ path('pumukitnewadmin_mms_updatebroadcast', {'id': '__mmId__'})|raw }}';
    var mmId = $('#pumukitnewadmin_mms_broadcast_mm_id').val();
    var broadcast_type = $('input[type=radio][name=pumukitnewadmin_mms_broadcast]:checked').val();
    var password_type = '{{ constant('Pumukit\\SchemaBundle\\Document\\EmbeddedBroadcast::TYPE_PASSWORD') }}';
    if (broadcast_type == password_type) {
        if (false == check_pass($('#broadcast_password_1').val(), $('#broadcast_password_2').val())) {
            no_success('Passwords do not match');
            return false;
        }
    }
    var password = $('#broadcast_password_1').val();
    var addGroups = [];
    var deleteGroups = [];
    $('a.add-broadcast-group-item').each(function(){
        addGroups.push($(this).attr("id"));
    });
    $('a.delete-broadcast-group-item').each(function(){
        deleteGroups.push($(this).attr("id"));
    });
    $.ajax({
        url: route.replace('__mmId__', mmId),
        type: 'POST',
        data: {'type': broadcast_type, 'password': password, 'addGroups': addGroups, 'deleteGroups': deleteGroups},
        error: function (jqXHR, textStatus, errorThrown) {
            no_success(errorThrown + ': ' + jqXHR.responseText);
        },
        success: function (response, textStatus, jqXHR) {
            var template = response['template'];
            var div_id = '#pumukitnewadmin_mm' + template + '_broadcast_description';
            $(div_id).html(response['descriptioni18n']);
            var message = '{% trans %}Successfully updated Broadcast.{% endtrans %}';
            success(message);
        }
    });
    return false;
});

$(document).on('submit', '#pumukitnewadmin_series_updatebroadcast_submit', function() {
    $('#myModal').modal('hide');
    var route = '{{ path('pumukitnewadmin_series_updatebroadcast', {'id': '__seriesId__'})|raw }}';
    var seriesId = $('#pumukitnewadmin_series_broadcast_series_id').val();
    var broadcast_type = $('input[type=radio][name=pumukitnewadmin_mms_broadcast]:checked').val();
    var password_type = '{{ constant('Pumukit\\SchemaBundle\\Document\\EmbeddedBroadcast::TYPE_PASSWORD') }}';
    if (broadcast_type == password_type) {
        if (false == check_pass($('#broadcast_password_1').val(), $('#broadcast_password_2').val())) {
            no_success('Passwords do not match');
            return false;
        }
    }
    var password = $('#broadcast_password_1').val();
    var addGroups = [];
    var deleteGroups = [];
    $('a.add-broadcast-group-item').each(function(){
        addGroups.push($(this).attr("id"));
    });
    $('a.delete-broadcast-group-item').each(function(){
        deleteGroups.push($(this).attr("id"));
    });

    var values = [];
    $('.checkbox_change_pub_mms:checked').each(function(){
        var $this = $(this);
        var mmId = $this.attr("id");
        values.push(mmId);
    });
    if (values.size == 0) return false;

    $.ajax({
        url: route.replace('__seriesId__', seriesId),
        type: 'POST',
        data: {'ids': values, 'type': broadcast_type, 'password': password, 'addGroups': addGroups, 'deleteGroups': deleteGroups},
        error: function (jqXHR, textStatus, errorThrown) {
            no_success(errorThrown + ': ' + jqXHR.responseText);
        },
        success: function (response, textStatus, jqXHR) {
            var div_id = '#pumukitnewadmin_mm_template_broadcast_description';
            $(div_id).html(response['descriptioni18n']);
            var message = '{% trans %}Successfully updated Broadcast in all Multimedia Objects.{% endtrans %}';
            success(message);
        }
    });
    return false;
});

delete_user_from_group = function(user_id, group_id, count, action)
{
    if (window.confirm('{% trans %}ATTENTION: Are you sure you want to delete this User from this Group?{% endtrans %}')) {
        var route = "{{ path('pumukitnewadmin_group_delete_user', {'id': '__groupId__', 'userId': '__userId__'})|raw }}";
        route = route.replace('__groupId__', group_id);
        route = route.replace('__userId__', user_id);
        $.ajax({
                url: route,
                type: 'POST',
                data: {'_method': 'DELETE', 'action': action},
                error: function(jqXHR, textStatus, errorThrown) {
                    no_success(errorThrown + ': ' + jqXHR.responseText);
                },
                success: function (response, textStatus, jqXHR) {
                    $('#pumukitnewadmin_group_added_users').html(response);
                    if (count == 1) {
                        $('#pumukitnewadmin_group_delete_all_relation_user').attr('disabled', 'disabled');
                    }
                    var message = 'Successfully delete User from Group.';
                    success(message);
                }
        }).done(function() {can_be_deleted(group_id);});
    }
    return false;
}

delete_multimediaobject_from_group = function(mm_id, group_id, count, action)
{
    if (window.confirm('{% trans %}ATTENTION: Are you sure you want to delete this Admin Multimedia Object from this Group?{% endtrans %}')) {
        var route = "{{ path('pumukitnewadmin_group_delete_multimediaobject', {'id': '__groupId__', 'mmId': '__mmId__'})|raw }}";
        route = route.replace('__groupId__', group_id);
        route = route.replace('__mmId__', mm_id);
        $.ajax({
                url: route,
                type: 'POST',
                data: {'_method': 'DELETE', 'action': action},
                error: function(jqXHR, textStatus, errorThrown) {
                no_success(errorThrown + ': ' + jqXHR.responseText);
                },
                success: function (response, textStatus, jqXHR) {
                    $('#pumukitnewadmin_group_added_multimediaobjects').html(response);
                    if (count == 1) {
                        $('#pumukitnewadmin_group_delete_all_relation_multimediaobject').attr('disabled', 'disabled');
                    }
                    var message = 'Successfully delete MultimediaObject from Group.';
                    success(message);
                }
        }).done(function() {can_be_deleted(group_id);});
    }
    return false;
}

delete_embeddedbroadcast_from_group = function(mm_id, group_id, count, action)
{
    if (window.confirm('{% trans %}ATTENTION: Are you sure you want to delete this Play Multimedia Object from this Group?{% endtrans %}')) {
        var route = "{{ path('pumukitnewadmin_group_delete_embeddedbroadcast', {'id': '__groupId__', 'mmId': '__mmId__'})|raw }}";
        route = route.replace('__groupId__', group_id);
        route = route.replace('__mmId__', mm_id);
        $.ajax({
                url: route,
                type: 'POST',
                data: {'_method': 'DELETE', 'action': action},
                error: function(jqXHR, textStatus, errorThrown) {
                no_success(errorThrown + ': ' + jqXHR.responseText);
                },
                success: function (response, textStatus, jqXHR) {
                    $('#pumukitnewadmin_group_added_embeddedbroadcasts').html(response);
                    if (count == 1) {
                        $('#pumukitnewadmin_group_delete_all_relation_embeddedbroadcast').attr('disabled', 'disabled');
                    }
                    var message = 'Successfully delete MultimediaObject from Group.';
                    success(message);
                }
        }).done(function() {can_be_deleted(group_id);});
    }
    return false;
}

can_be_deleted = function(group_id)
{
    var route = "{{ path('pumukitnewadmin_group_can_be_deleted', {'id': '__groupId__'})|raw }}";
    route = route.replace('__groupId__', group_id);
    $.ajax({
            url: route,
            type: 'GET',
            error: function(jqXHR, textStatus, errorThrown) {
                no_success(errorThrown + ': ' + jqXHR.responseText);
            },
            success: function (response, textStatus, jqXHR) {
                var group_name = {% autoescape 'js' %}response.groupName{% endautoescape %};
                var delete_message = {% autoescape 'js' %}response.deleteMessage{% endautoescape %};
                var can_be_deleted = response.canbedeleted;
                var onclick_value = "window.submit_delete_group('"+group_id+"', '"+group_name+"', '"+delete_message+"', '"+can_be_deleted+"'); return false;";
                $('#pumukitnewadmin_group_delete').attr('onclick', onclick_value);
            }
    });
    return false;
}

can_enable_broadcast_groups_save_button = function(resource)
{
    var submit_button = get_submit_button_id();
    if ($.trim($('#add_broadcast_groups').html()) == '') {
        $(submit_button).prop('disabled', true);
    } else {
        $(submit_button).prop('disabled', false);
    }
    return false;
}

can_enable_broadcast_password_save_button = function()
{
    var pass1 = $('#broadcast_password_1').val();
    var pass2 = $('#broadcast_password_2').val();
    var submit_button = get_submit_button_id();
    if ((pass1 == '') || (pass2 == '')){
        $(submit_button).prop('disabled', true);
    } else if (pass1 == pass2) {
        $(submit_button).prop('disabled', false);
    } else {
        $(submit_button).prop('disabled', true);
    }
    return false;
}

get_submit_button_id = function()
{
    if ($('#pumukitnewadmin_series_broadcast_series_id').val() == undefined) {
        return '#pumukitnewadmin_mm_broadcast_updategroup_submit';
    } else {
        return '#pumukitnewadmin_series_broadcast_updategroup_submit';
    }
}

is_last_user_relation_to_admin_mm = function(resource, person_id, roleId, mmId, hName, template, owner)
{
    var owners = [];
    var addGroups = [];
    owners_class = '.'+resource+'-personal-scope-person-id';
    $(owners_class).each(function(){
        owners.push($(this).attr("id"));
    });
    $('a.add-'+resource+'-group-item').each(function(){
        addGroups.push($(this).attr("id"));
    });
    var route = "{{ path('pumukitnewadmin_mms_user_last_relation')|raw }}";
    var message = '';
    var use_success = true;
    $.ajax({
        url: route,
        type: 'POST',
        data: {'mmId': mmId, 'personId': person_id, 'owners': owners, 'addGroups': addGroups},
        error: function(jqXHR, textStatus, errorThrown){
            message = errorThrown + ': ' + jqXHR.responseText;
            use_success = false;
        },
        success: function(response){
            message = response;
            use_success = true;
        }
    }).always(function(data, textStatus, jqXHR){
        if (use_success) {
            var delete_message = "{% trans %}Are you sure you want to delete the relation of{% endtrans %} "+hName+"?";
            if (message === false) {
                if (person_id == null) {
                    $('#warning_personal_user_'+resource+'_group').hide();
                    $('#remember_save_'+resource+'_group').show();
                } else {
                    window.submit_delete_person_relation(person_id, roleId, mmId, hName, template, owner, null);
                }
            } else if (message === true) {
                if (person_id == null) {
                    $('#remember_save_'+resource+'_group').hide();
                    $('#warning_personal_user_'+resource+'_group').show();
                } else {
                    delete_message = "{% trans %}WARNING: You will no longer have access to this Multimedia Object.{% endtrans %} " + delete_message;
                    window.submit_delete_person_relation(person_id, roleId, mmId, hName, template, owner, delete_message);
                }
            }
        } else {
            no_success(message);
        }
    });

    return false;
}


//
window.init_series_materialtags = function() {
    $inputs = $('input.series.materialtags')
    $inputs.materialtags({
        typeaheadjs: {
            name: 'keywords',
            displayKey: '_id',
            valueKey: '_id',
            source: window.serieskeywords.ttAdapter()
        }
    });

    $inputs.on('itemAdded', function(event) {
        window.serieskeywords.add({'_id': event.item})
    });
}

window.init_mmobj_materialtags = function() {
    $inputs = $('input.mmobj.materialtags');
    $inputs.materialtags({
        typeaheadjs: {
            name: 'keywords',
            displayKey: '_id',
            valueKey: '_id',
            source: window.mmobjkeywords.ttAdapter()
        }
    });

    $inputs.on('itemAdded', function(event) {
        window.mmobjkeywords.add({'_id': event.item})
    });

}

$(document).on('click', '#pumukitnewadmin_mmo_series_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_mmo_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'series': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'series': '__type__'}})|raw }}";
    }
    $('#list_mms').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_mmo_series_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'series': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'series': 'asc'}})|raw }}";
    }
    $('#list_mms').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_mmo_title_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_mmo_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'title': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'title': '__type__'}})|raw }}";
    }
    $('#list_mms').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});
$(document).on('click', '#pumukitnewadmin_mmo_title_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'title': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'title': 'asc'}})|raw }}";
    }
    $('#list_mms').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_mmo_public_date_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_mmo_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'public_date': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'public_date': '__type__'}})|raw }}";
    }
    $('#list_mms').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_mmo_public_date_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'public_date': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'public_date': 'asc'}})|raw }}";
    }
    $('#list_mms').load(route, {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_mmo_record_date_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_mmo_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'record_date': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'record_date': '__type__'}})|raw }}";
    }
    $('#list_mms').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_mmo_record_date_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'record_date': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'record_date': 'asc'}})|raw }}";
    }
    $('#list_mms').load(route, {'_method':'POST'});
    return false;
});


$(document).on('click', '#pumukitnewadmin_mmo_duration_sort_selected', function(){
    var inputROId = $('#inputROId').val();
    var type = $('#pumukitnewadmin_mmo_sort_change_type').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'duration': '__type__'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'duration': '__type__'}})|raw }}";
    }
    $('#list_mms').load(route.replace('__type__', type), {'_method':'POST'});
    return false;
});

$(document).on('click', '#pumukitnewadmin_mmo_duration_sort_not_selected', function(){
    var inputROId = $('#inputROId').val();
    if (inputROId) {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'selectedSeriesId': '__inputROId__', 'sorting': {'duration': 'asc'}})|raw }}";
        route = route.replace('__inputROId__', inputROId);
    } else {
        var route = "{{ path('pumukitnewadmin_mms_listall', {'sorting': {'duration': 'asc'}})|raw }}";
    }
    $('#list_mms').load(route, {'_method':'POST'});
    return false;
});



window.pmk_translate = function(element, input_type = 'input', show_prompt = true) {
    $e = $(element);
    var target_lang = $e.data("locale")
    var text = $e.parent().parent().find(input_type).val();
    var route = "{{ path('pumukitnewadmin_metadata_translate')|raw }}";
    $e.children().addClass('pmk-job-animate');
    $.post(route, {"q": text, "target_lang": target_lang}, function(data, textStatus, jqXHR){
        $e.children().removeClass('pmk-job-animate');
        if (show_prompt) {
            var translation = prompt("{% trans %}Please enter your translation:{% endtrans %}", data.text);
        } else {
            var translation = data.text;
        }
        if (translation != null && translation != "") {
            $e.parent().find(input_type).val(translation);
        }
    }).fail(function(e){
        no_success('{% trans %}Error{% endtrans %}');
        $e.children().removeClass('pmk-job-animate');
    });
}
