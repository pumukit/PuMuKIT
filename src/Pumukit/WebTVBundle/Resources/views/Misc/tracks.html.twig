{% if object.getProperty('opencast') is not empty or object.isMultistream() %}
    <li class="list-group-item">
        <a href="{{ videoUrl }}" title="{{ "Url track"|trans }}">
            <i class="fas fa-video"></i>
            {% apply spaceless %}
                {{ object.isPublicEmbeddedBroadcast() ? 'Video'|trans : 'Private video'|trans }}
            {% endapply %}
        </a>
        &nbsp;|&nbsp;&nbsp;
        <span class="language">
            {% set lang = (object.getProperty('opencastlanguage')?(object.getProperty('opencastlanguage')|lower):(object.isMultistream()?object.getFilteredTrackWithTags(['display'], [], [], []).language():'en')) %}
            {{ is_addon_language(lang) ? lang | language_name_custom : lang | language_name | capitalize }}
        </span>
        &nbsp;|&nbsp; {{ mmobj_duration(object) | duration_string }}
    </li>
{% else %}
    {% set tracks = object.getFilteredTracksWithTags(['display'], [], [], []) %}
    {% set dynamic_quality_tracks = tracks | filter(track => track.tags().containsTag('dynamic')) %}
    {% set filtered_tracks = (dynamic_quality_tracks | length > 0) ? dynamic_quality_tracks : tracks %}

    {% for track in filtered_tracks | filter(track => not track.isHide()) %}
        {% if magic_url is defined %}
            {% set url_track = url('pumukit_webtv_multimediaobject_magicindex', {secret: object.secret, 'track_id': track.id}) %}
        {% else %}
            {% set url_track = url('pumukit_webtv_multimediaobject_index', {'id': object.id, 'track_id': track.id}) %}
        {% endif %}
        <li class="list-group-item list-group-item-custom">
            <a href="{{ url_track }}" title="{{ "Url track"|trans }}">
                {% if object.isOnlyAudio() %}
                    <i class="fa fa-headphones"></i>
                {% else %}
                    <i class="fa fa-video-camera"></i>
                {% endif %}

                {% apply spaceless %}
                    {% if track.metadata().isOnlyAudio() %}
                        {{ object.isPublicEmbeddedBroadcast() ? 'Audio'|trans : 'Private audio'|trans }}
                    {% elseif track.tags().containsTag('download') %}
                        {% trans %}Download master{% endtrans %}
                    {% else %}
                        {{ object.isPublicEmbeddedBroadcast() ? 'Video'|trans : 'Private video'|trans }}
                    {% endif %}
                {% endapply %}

                <span class="language"> ({{ track.language()|language_name|capitalize }})</span>
            </a>
        </li>
    {% endfor %}
{% endif %}
